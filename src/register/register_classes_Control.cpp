#include <godot_cpp/classes/control.hpp>
#include <godot_cpp/classes/font.hpp>
#include <godot_cpp/classes/global_constants.hpp>
#include <godot_cpp/classes/input_event.hpp>
#include <godot_cpp/classes/object.hpp>
#include <godot_cpp/classes/ref.hpp>
#include <godot_cpp/classes/style_box.hpp>
#include <godot_cpp/classes/texture2d.hpp>
#include <godot_cpp/classes/theme.hpp>
#include <godot_cpp/variant/array.hpp>
#include <godot_cpp/variant/callable.hpp>
#include <godot_cpp/variant/color.hpp>
#include <godot_cpp/variant/rect2.hpp>
#include <godot_cpp/variant/string.hpp>
#include <godot_cpp/variant/string_name.hpp>
#include <godot_cpp/variant/typed_array.hpp>
#include <godot_cpp/variant/variant.hpp>
#include <godot_cpp/variant/vector2.hpp>
#include <godot_cpp/variant/vector3i.hpp>

#include "qjspp.hpp"
#include "register/register_classes.h"

using namespace godot;

void register_classes_Control() {
	qjs::Context::Module &_module = get_Control_module();
	_module.class_<Control>("Control")
			.constructor<>()
			.property<&Control::is_clipping_contents, &Control::set_clip_contents>("clip_contents")
			.property<&Control::get_custom_minimum_size, &Control::set_custom_minimum_size>("custom_minimum_size")
			.property<&Control::get_layout_direction, &Control::set_layout_direction>("layout_direction")
			.property<&Control::get_anchor>("anchor_left")
			.property<&Control::get_anchor>("anchor_top")
			.property<&Control::get_anchor>("anchor_right")
			.property<&Control::get_anchor>("anchor_bottom")
			.property<&Control::get_offset, &Control::set_offset>("offset_left")
			.property<&Control::get_offset, &Control::set_offset>("offset_top")
			.property<&Control::get_offset, &Control::set_offset>("offset_right")
			.property<&Control::get_offset, &Control::set_offset>("offset_bottom")
			.property<&Control::get_h_grow_direction, &Control::set_h_grow_direction>("grow_horizontal")
			.property<&Control::get_v_grow_direction, &Control::set_v_grow_direction>("grow_vertical")
			.property<&Control::get_size>("size")
			.property<&Control::get_position>("position")
			.property<&Control::get_global_position>("global_position")
			.property<&Control::get_rotation, &Control::set_rotation>("rotation")
			.property<&Control::get_rotation_degrees, &Control::set_rotation_degrees>("rotation_degrees")
			.property<&Control::get_scale, &Control::set_scale>("scale")
			.property<&Control::get_pivot_offset, &Control::set_pivot_offset>("pivot_offset")
			.property<&Control::get_h_size_flags, &Control::set_h_size_flags>("size_flags_horizontal")
			.property<&Control::get_v_size_flags, &Control::set_v_size_flags>("size_flags_vertical")
			.property<&Control::get_stretch_ratio, &Control::set_stretch_ratio>("size_flags_stretch_ratio")
			.property<&Control::is_auto_translating, &Control::set_auto_translate>("auto_translate")
			.property<&Control::is_localizing_numeral_system, &Control::set_localize_numeral_system>("localize_numeral_system")
			.property<&Control::get_tooltip_text, &Control::set_tooltip_text>("tooltip_text")
			.property<&Control::get_focus_neighbor, &Control::set_focus_neighbor>("focus_neighbor_left")
			.property<&Control::get_focus_neighbor, &Control::set_focus_neighbor>("focus_neighbor_top")
			.property<&Control::get_focus_neighbor, &Control::set_focus_neighbor>("focus_neighbor_right")
			.property<&Control::get_focus_neighbor, &Control::set_focus_neighbor>("focus_neighbor_bottom")
			.property<&Control::get_focus_next, &Control::set_focus_next>("focus_next")
			.property<&Control::get_focus_previous, &Control::set_focus_previous>("focus_previous")
			.property<&Control::get_focus_mode, &Control::set_focus_mode>("focus_mode")
			.property<&Control::get_mouse_filter, &Control::set_mouse_filter>("mouse_filter")
			.property<&Control::is_force_pass_scroll_events, &Control::set_force_pass_scroll_events>("mouse_force_pass_scroll_events")
			.property<&Control::get_default_cursor_shape, &Control::set_default_cursor_shape>("mouse_default_cursor_shape")
			.property<&Control::get_shortcut_context, &Control::set_shortcut_context>("shortcut_context")
			.property<&Control::get_theme, &Control::set_theme>("theme")
			.property<&Control::get_theme_type_variation, &Control::set_theme_type_variation>("theme_type_variation")
			.fun<static_cast<bool (Control::*)(const Vector2 &) const>(&Control::_has_point)>("_has_point")
			.fun<static_cast<TypedArray<Vector3i> (Control::*)(const Array &, const String &) const>(&Control::_structured_text_parser)>("_structured_text_parser")
			.fun<static_cast<Vector2 (Control::*)() const>(&Control::_get_minimum_size)>("_get_minimum_size")
			.fun<static_cast<String (Control::*)(const Vector2 &) const>(&Control::_get_tooltip)>("_get_tooltip")
			.fun<static_cast<Variant (Control::*)(const Vector2 &)>(&Control::_get_drag_data)>("_get_drag_data")
			.fun<static_cast<bool (Control::*)(const Vector2 &, const Variant &) const>(&Control::_can_drop_data)>("_can_drop_data")
			.fun<static_cast<void (Control::*)(const Vector2 &, const Variant &)>(&Control::_drop_data)>("_drop_data")
			.fun<static_cast<Object *(Control::*)(const String &) const>(&Control::_make_custom_tooltip)>("_make_custom_tooltip")
			.fun<static_cast<void (Control::*)(const Ref<InputEvent> &)>(&Control::_gui_input)>("_gui_input")
			.fun<static_cast<void (Control::*)()>(&Control::accept_event)>("accept_event")
			.fun<static_cast<Vector2 (Control::*)() const>(&Control::get_minimum_size)>("get_minimum_size")
			.fun<static_cast<Vector2 (Control::*)() const>(&Control::get_combined_minimum_size)>("get_combined_minimum_size")
			.fun<static_cast<void (Control::*)(Control::LayoutPreset, bool)>(&Control::set_anchors_preset)>("set_anchors_preset")
			.fun<static_cast<void (Control::*)(Control::LayoutPreset, Control::LayoutPresetMode, int32_t)>(&Control::set_offsets_preset)>("set_offsets_preset")
			.fun<static_cast<void (Control::*)(Control::LayoutPreset, Control::LayoutPresetMode, int32_t)>(&Control::set_anchors_and_offsets_preset)>("set_anchors_and_offsets_preset")
			.fun<static_cast<void (Control::*)(Side, double, bool, bool)>(&Control::set_anchor)>("set_anchor")
			.fun<static_cast<void (Control::*)(Side, double, double, bool)>(&Control::set_anchor_and_offset)>("set_anchor_and_offset")
			.fun<static_cast<void (Control::*)(const Vector2 &)>(&Control::set_begin)>("set_begin")
			.fun<static_cast<void (Control::*)(const Vector2 &)>(&Control::set_end)>("set_end")
			.fun<static_cast<void (Control::*)(const Vector2 &, bool)>(&Control::set_position)>("set_position")
			.fun<static_cast<void (Control::*)(const Vector2 &, bool)>(&Control::set_size)>("set_size")
			.fun<static_cast<void (Control::*)()>(&Control::reset_size)>("reset_size")
			.fun<static_cast<void (Control::*)(const Vector2 &, bool)>(&Control::set_global_position)>("set_global_position")
			.fun<static_cast<Vector2 (Control::*)() const>(&Control::get_begin)>("get_begin")
			.fun<static_cast<Vector2 (Control::*)() const>(&Control::get_end)>("get_end")
			.fun<static_cast<Vector2 (Control::*)() const>(&Control::get_parent_area_size)>("get_parent_area_size")
			.fun<static_cast<Vector2 (Control::*)() const>(&Control::get_screen_position)>("get_screen_position")
			.fun<static_cast<Rect2 (Control::*)() const>(&Control::get_rect)>("get_rect")
			.fun<static_cast<Rect2 (Control::*)() const>(&Control::get_global_rect)>("get_global_rect")
			.fun<static_cast<bool (Control::*)() const>(&Control::has_focus)>("has_focus")
			.fun<static_cast<void (Control::*)()>(&Control::grab_focus)>("grab_focus")
			.fun<static_cast<void (Control::*)()>(&Control::release_focus)>("release_focus")
			.fun<static_cast<Control *(Control::*)() const>(&Control::find_prev_valid_focus)>("find_prev_valid_focus")
			.fun<static_cast<Control *(Control::*)() const>(&Control::find_next_valid_focus)>("find_next_valid_focus")
			.fun<static_cast<Control *(Control::*)(Side) const>(&Control::find_valid_focus_neighbor)>("find_valid_focus_neighbor")
			.fun<static_cast<void (Control::*)()>(&Control::begin_bulk_theme_override)>("begin_bulk_theme_override")
			.fun<static_cast<void (Control::*)()>(&Control::end_bulk_theme_override)>("end_bulk_theme_override")
			.fun<static_cast<void (Control::*)(const StringName &, const Ref<Texture2D> &)>(&Control::add_theme_icon_override)>("add_theme_icon_override")
			.fun<static_cast<void (Control::*)(const StringName &, const Ref<StyleBox> &)>(&Control::add_theme_stylebox_override)>("add_theme_stylebox_override")
			.fun<static_cast<void (Control::*)(const StringName &, const Ref<Font> &)>(&Control::add_theme_font_override)>("add_theme_font_override")
			.fun<static_cast<void (Control::*)(const StringName &, int32_t)>(&Control::add_theme_font_size_override)>("add_theme_font_size_override")
			.fun<static_cast<void (Control::*)(const StringName &, const Color &)>(&Control::add_theme_color_override)>("add_theme_color_override")
			.fun<static_cast<void (Control::*)(const StringName &, int32_t)>(&Control::add_theme_constant_override)>("add_theme_constant_override")
			.fun<static_cast<void (Control::*)(const StringName &)>(&Control::remove_theme_icon_override)>("remove_theme_icon_override")
			.fun<static_cast<void (Control::*)(const StringName &)>(&Control::remove_theme_stylebox_override)>("remove_theme_stylebox_override")
			.fun<static_cast<void (Control::*)(const StringName &)>(&Control::remove_theme_font_override)>("remove_theme_font_override")
			.fun<static_cast<void (Control::*)(const StringName &)>(&Control::remove_theme_font_size_override)>("remove_theme_font_size_override")
			.fun<static_cast<void (Control::*)(const StringName &)>(&Control::remove_theme_color_override)>("remove_theme_color_override")
			.fun<static_cast<void (Control::*)(const StringName &)>(&Control::remove_theme_constant_override)>("remove_theme_constant_override")
			.fun<static_cast<Ref<Texture2D> (Control::*)(const StringName &, const StringName &) const>(&Control::get_theme_icon)>("get_theme_icon")
			.fun<static_cast<Ref<StyleBox> (Control::*)(const StringName &, const StringName &) const>(&Control::get_theme_stylebox)>("get_theme_stylebox")
			.fun<static_cast<Ref<Font> (Control::*)(const StringName &, const StringName &) const>(&Control::get_theme_font)>("get_theme_font")
			.fun<static_cast<int32_t (Control::*)(const StringName &, const StringName &) const>(&Control::get_theme_font_size)>("get_theme_font_size")
			.fun<static_cast<Color (Control::*)(const StringName &, const StringName &) const>(&Control::get_theme_color)>("get_theme_color")
			.fun<static_cast<int32_t (Control::*)(const StringName &, const StringName &) const>(&Control::get_theme_constant)>("get_theme_constant")
			.fun<static_cast<bool (Control::*)(const StringName &) const>(&Control::has_theme_icon_override)>("has_theme_icon_override")
			.fun<static_cast<bool (Control::*)(const StringName &) const>(&Control::has_theme_stylebox_override)>("has_theme_stylebox_override")
			.fun<static_cast<bool (Control::*)(const StringName &) const>(&Control::has_theme_font_override)>("has_theme_font_override")
			.fun<static_cast<bool (Control::*)(const StringName &) const>(&Control::has_theme_font_size_override)>("has_theme_font_size_override")
			.fun<static_cast<bool (Control::*)(const StringName &) const>(&Control::has_theme_color_override)>("has_theme_color_override")
			.fun<static_cast<bool (Control::*)(const StringName &) const>(&Control::has_theme_constant_override)>("has_theme_constant_override")
			.fun<static_cast<bool (Control::*)(const StringName &, const StringName &) const>(&Control::has_theme_icon)>("has_theme_icon")
			.fun<static_cast<bool (Control::*)(const StringName &, const StringName &) const>(&Control::has_theme_stylebox)>("has_theme_stylebox")
			.fun<static_cast<bool (Control::*)(const StringName &, const StringName &) const>(&Control::has_theme_font)>("has_theme_font")
			.fun<static_cast<bool (Control::*)(const StringName &, const StringName &) const>(&Control::has_theme_font_size)>("has_theme_font_size")
			.fun<static_cast<bool (Control::*)(const StringName &, const StringName &) const>(&Control::has_theme_color)>("has_theme_color")
			.fun<static_cast<bool (Control::*)(const StringName &, const StringName &) const>(&Control::has_theme_constant)>("has_theme_constant")
			.fun<static_cast<double (Control::*)() const>(&Control::get_theme_default_base_scale)>("get_theme_default_base_scale")
			.fun<static_cast<Ref<Font> (Control::*)() const>(&Control::get_theme_default_font)>("get_theme_default_font")
			.fun<static_cast<int32_t (Control::*)() const>(&Control::get_theme_default_font_size)>("get_theme_default_font_size")
			.fun<static_cast<Control *(Control::*)() const>(&Control::get_parent_control)>("get_parent_control")
			.fun<static_cast<String (Control::*)(const Vector2 &) const>(&Control::get_tooltip)>("get_tooltip")
			.fun<static_cast<Control::CursorShape (Control::*)(const Vector2 &) const>(&Control::get_cursor_shape)>("get_cursor_shape")
			.fun<static_cast<void (Control::*)(const Variant &, Control *)>(&Control::force_drag)>("force_drag")
			.fun<static_cast<void (Control::*)()>(&Control::grab_click_focus)>("grab_click_focus")
			.fun<static_cast<void (Control::*)(const Callable &, const Callable &, const Callable &)>(&Control::set_drag_forwarding)>("set_drag_forwarding")
			.fun<static_cast<void (Control::*)(Control *)>(&Control::set_drag_preview)>("set_drag_preview")
			.fun<static_cast<bool (Control::*)() const>(&Control::is_drag_successful)>("is_drag_successful")
			.fun<static_cast<void (Control::*)(const Vector2 &)>(&Control::warp_mouse)>("warp_mouse")
			.fun<static_cast<void (Control::*)()>(&Control::update_minimum_size)>("update_minimum_size")
			.fun<static_cast<bool (Control::*)() const>(&Control::is_layout_rtl)>("is_layout_rtl");
}