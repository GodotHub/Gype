
#include <godot_cpp/variant/node_path.hpp>
#include <godot_cpp/variant/packed_byte_array.hpp>
#include <godot_cpp/variant/packed_float64_array.hpp>
#include <godot_cpp/variant/packed_string_array.hpp>
#include <godot_cpp/variant/string.hpp>
#include <godot_cpp/variant/string_name.hpp>
#include <godot_cpp/variant/variant.hpp>

#include "register/register_builtin_classes.h"

using namespace godot;

void register_builtin_classes_String() {
	get_Variant_module().class_<String>("String").constructor<>().constructor<const String &>("String_1").constructor<const StringName &>("String_2").constructor<const NodePath &>("String_3")

			.fun<static_cast<int64_t (String::*)(const String &) const>(&String::casecmp_to)>("casecmp_to")
			.fun<static_cast<int64_t (String::*)(const String &) const>(&String::nocasecmp_to)>("nocasecmp_to")
			.fun<static_cast<int64_t (String::*)(const String &) const>(&String::naturalcasecmp_to)>("naturalcasecmp_to")
			.fun<static_cast<int64_t (String::*)(const String &) const>(&String::naturalnocasecmp_to)>("naturalnocasecmp_to")
			.fun<static_cast<int64_t (String::*)() const>(&String::length)>("length")
			.fun<static_cast<String (String::*)(int64_t, int64_t) const>(&String::substr)>("substr")
			.fun<static_cast<String (String::*)(const String &, int64_t) const>(&String::get_slice)>("get_slice")
			.fun<static_cast<String (String::*)(int64_t, int64_t) const>(&String::get_slicec)>("get_slicec")
			.fun<static_cast<int64_t (String::*)(const String &) const>(&String::get_slice_count)>("get_slice_count")
			.fun<static_cast<int64_t (String::*)(const String &, int64_t) const>(&String::find)>("find")
			.fun<static_cast<int64_t (String::*)(const String &, int64_t, int64_t) const>(&String::count)>("count")
			.fun<static_cast<int64_t (String::*)(const String &, int64_t, int64_t) const>(&String::countn)>("countn")
			.fun<static_cast<int64_t (String::*)(const String &, int64_t) const>(&String::findn)>("findn")
			.fun<static_cast<int64_t (String::*)(const String &, int64_t) const>(&String::rfind)>("rfind")
			.fun<static_cast<int64_t (String::*)(const String &, int64_t) const>(&String::rfindn)>("rfindn")
			.fun<static_cast<bool (String::*)(const String &) const>(&String::match)>("match")
			.fun<static_cast<bool (String::*)(const String &) const>(&String::matchn)>("matchn")
			.fun<static_cast<bool (String::*)(const String &) const>(&String::begins_with)>("begins_with")
			.fun<static_cast<bool (String::*)(const String &) const>(&String::ends_with)>("ends_with")
			.fun<static_cast<bool (String::*)(const String &) const>(&String::is_subsequence_of)>("is_subsequence_of")
			.fun<static_cast<bool (String::*)(const String &) const>(&String::is_subsequence_ofn)>("is_subsequence_ofn")
			.fun<static_cast<PackedStringArray (String::*)() const>(&String::bigrams)>("bigrams")
			.fun<static_cast<double (String::*)(const String &) const>(&String::similarity)>("similarity")
			.fun<static_cast<String (String::*)(const Variant &, const String &) const>(&String::format)>("format")
			.fun<static_cast<String (String::*)(const String &, const String &) const>(&String::replace)>("replace")
			.fun<static_cast<String (String::*)(const String &, const String &) const>(&String::replacen)>("replacen")
			.fun<static_cast<String (String::*)(int64_t) const>(&String::repeat)>("repeat")
			.fun<static_cast<String (String::*)() const>(&String::reverse)>("reverse")
			.fun<static_cast<String (String::*)(int64_t, const String &) const>(&String::insert)>("insert")
			.fun<static_cast<String (String::*)(int64_t, int64_t) const>(&String::erase)>("erase")
			.fun<static_cast<String (String::*)() const>(&String::capitalize)>("capitalize")
			.fun<static_cast<String (String::*)() const>(&String::to_camel_case)>("to_camel_case")
			.fun<static_cast<String (String::*)() const>(&String::to_pascal_case)>("to_pascal_case")
			.fun<static_cast<String (String::*)() const>(&String::to_snake_case)>("to_snake_case")
			.fun<static_cast<PackedStringArray (String::*)(const String &, bool, int64_t) const>(&String::split)>("split")
			.fun<static_cast<PackedStringArray (String::*)(const String &, bool, int64_t) const>(&String::rsplit)>("rsplit")
			.fun<static_cast<PackedFloat64Array (String::*)(const String &, bool) const>(&String::split_floats)>("split_floats")
			.fun<static_cast<String (String::*)(const PackedStringArray &) const>(&String::join)>("join")
			.fun<static_cast<String (String::*)() const>(&String::to_upper)>("to_upper")
			.fun<static_cast<String (String::*)() const>(&String::to_lower)>("to_lower")
			.fun<static_cast<String (String::*)(int64_t) const>(&String::left)>("left")
			.fun<static_cast<String (String::*)(int64_t) const>(&String::right)>("right")
			.fun<static_cast<String (String::*)(bool, bool) const>(&String::strip_edges)>("strip_edges")
			.fun<static_cast<String (String::*)() const>(&String::strip_escapes)>("strip_escapes")
			.fun<static_cast<String (String::*)(const String &) const>(&String::lstrip)>("lstrip")
			.fun<static_cast<String (String::*)(const String &) const>(&String::rstrip)>("rstrip")
			.fun<static_cast<String (String::*)() const>(&String::get_extension)>("get_extension")
			.fun<static_cast<String (String::*)() const>(&String::get_basename)>("get_basename")
			.fun<static_cast<String (String::*)(const String &) const>(&String::path_join)>("path_join")
			.fun<static_cast<int64_t (String::*)(int64_t) const>(&String::unicode_at)>("unicode_at")
			.fun<static_cast<String (String::*)(const String &) const>(&String::indent)>("indent")
			.fun<static_cast<String (String::*)() const>(&String::dedent)>("dedent")
			.fun<static_cast<int64_t (String::*)() const>(&String::hash)>("hash")
			.fun<static_cast<String (String::*)() const>(&String::md5_text)>("md5_text")
			.fun<static_cast<String (String::*)() const>(&String::sha1_text)>("sha1_text")
			.fun<static_cast<String (String::*)() const>(&String::sha256_text)>("sha256_text")
			.fun<static_cast<PackedByteArray (String::*)() const>(&String::md5_buffer)>("md5_buffer")
			.fun<static_cast<PackedByteArray (String::*)() const>(&String::sha1_buffer)>("sha1_buffer")
			.fun<static_cast<PackedByteArray (String::*)() const>(&String::sha256_buffer)>("sha256_buffer")
			.fun<static_cast<bool (String::*)() const>(&String::is_empty)>("is_empty")
			.fun<static_cast<bool (String::*)(const String &) const>(&String::contains)>("contains")
			.fun<static_cast<bool (String::*)() const>(&String::is_absolute_path)>("is_absolute_path")
			.fun<static_cast<bool (String::*)() const>(&String::is_relative_path)>("is_relative_path")
			.fun<static_cast<String (String::*)() const>(&String::simplify_path)>("simplify_path")
			.fun<static_cast<String (String::*)() const>(&String::get_base_dir)>("get_base_dir")
			.fun<static_cast<String (String::*)() const>(&String::get_file)>("get_file")
			.fun<static_cast<String (String::*)(bool) const>(&String::xml_escape)>("xml_escape")
			.fun<static_cast<String (String::*)() const>(&String::xml_unescape)>("xml_unescape")
			.fun<static_cast<String (String::*)() const>(&String::uri_encode)>("uri_encode")
			.fun<static_cast<String (String::*)() const>(&String::uri_decode)>("uri_decode")
			.fun<static_cast<String (String::*)() const>(&String::c_escape)>("c_escape")
			.fun<static_cast<String (String::*)() const>(&String::c_unescape)>("c_unescape")
			.fun<static_cast<String (String::*)() const>(&String::json_escape)>("json_escape")
			.fun<static_cast<String (String::*)() const>(&String::validate_node_name)>("validate_node_name")
			.fun<static_cast<String (String::*)() const>(&String::validate_filename)>("validate_filename")
			.fun<static_cast<bool (String::*)() const>(&String::is_valid_identifier)>("is_valid_identifier")
			.fun<static_cast<bool (String::*)() const>(&String::is_valid_int)>("is_valid_int")
			.fun<static_cast<bool (String::*)() const>(&String::is_valid_float)>("is_valid_float")
			.fun<static_cast<bool (String::*)(bool) const>(&String::is_valid_hex_number)>("is_valid_hex_number")
			.fun<static_cast<bool (String::*)() const>(&String::is_valid_html_color)>("is_valid_html_color")
			.fun<static_cast<bool (String::*)() const>(&String::is_valid_ip_address)>("is_valid_ip_address")
			.fun<static_cast<bool (String::*)() const>(&String::is_valid_filename)>("is_valid_filename")
			.fun<static_cast<int64_t (String::*)() const>(&String::to_int)>("to_int")
			.fun<static_cast<double (String::*)() const>(&String::to_float)>("to_float")
			.fun<static_cast<int64_t (String::*)() const>(&String::hex_to_int)>("hex_to_int")
			.fun<static_cast<int64_t (String::*)() const>(&String::bin_to_int)>("bin_to_int")
			.fun<static_cast<String (String::*)(int64_t, const String &) const>(&String::lpad)>("lpad")
			.fun<static_cast<String (String::*)(int64_t, const String &) const>(&String::rpad)>("rpad")
			.fun<static_cast<String (String::*)(int64_t) const>(&String::pad_decimals)>("pad_decimals")
			.fun<static_cast<String (String::*)(int64_t) const>(&String::pad_zeros)>("pad_zeros")
			.fun<static_cast<String (String::*)(const String &) const>(&String::trim_prefix)>("trim_prefix")
			.fun<static_cast<String (String::*)(const String &) const>(&String::trim_suffix)>("trim_suffix")
			.fun<static_cast<PackedByteArray (String::*)() const>(&String::to_ascii_buffer)>("to_ascii_buffer")
			.fun<static_cast<PackedByteArray (String::*)() const>(&String::to_utf8_buffer)>("to_utf8_buffer")
			.fun<static_cast<PackedByteArray (String::*)() const>(&String::to_utf16_buffer)>("to_utf16_buffer")
			.fun<static_cast<PackedByteArray (String::*)() const>(&String::to_utf32_buffer)>("to_utf32_buffer")
			.fun<static_cast<PackedByteArray (String::*)() const>(&String::hex_decode)>("hex_decode")
			.fun<static_cast<PackedByteArray (String::*)() const>(&String::to_wchar_buffer)>("to_wchar_buffer")
			.static_fun<String::num_scientific>("num_scientific")
			.static_fun<String::num>("num")
			.static_fun<String::num_int64>("num_int64")
			.static_fun<String::num_uint64>("num_uint64")
			.static_fun<String::chr>("chr")
			.static_fun<String::humanize_size>("humanize_size");
}