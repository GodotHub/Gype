#include "register/register_classes.h"
#include "register/utils.h"
#include <godot_cpp/classes/text_edit.hpp>

using namespace godot;

void register_classes_TextEdit() {
    qjs::Context::Module &_module = _Control;
    _module.class_<TextEdit>("TextEdit")
           .constructor<>()
           .property<TextEdit::get_text, TextEdit::set_text>("text")
           .property<TextEdit::get_placeholder, TextEdit::set_placeholder>("placeholder_text")
           .property<TextEdit::is_editable, TextEdit::set_editable>("editable")
           .property<TextEdit::is_context_menu_enabled, TextEdit::set_context_menu_enabled>("context_menu_enabled")
           .property<TextEdit::is_shortcut_keys_enabled, TextEdit::set_shortcut_keys_enabled>("shortcut_keys_enabled")
           .property<TextEdit::is_selecting_enabled, TextEdit::set_selecting_enabled>("selecting_enabled")
           .property<TextEdit::is_deselect_on_focus_loss_enabled, TextEdit::set_deselect_on_focus_loss_enabled>("deselect_on_focus_loss_enabled")
           .property<TextEdit::is_drag_and_drop_selection_enabled, TextEdit::set_drag_and_drop_selection_enabled>("drag_and_drop_selection_enabled")
           .property<TextEdit::is_virtual_keyboard_enabled, TextEdit::set_virtual_keyboard_enabled>("virtual_keyboard_enabled")
           .property<TextEdit::is_middle_mouse_paste_enabled, TextEdit::set_middle_mouse_paste_enabled>("middle_mouse_paste_enabled")
           .property<TextEdit::get_line_wrapping_mode, TextEdit::set_line_wrapping_mode>("wrap_mode")
           .property<TextEdit::get_autowrap_mode, TextEdit::set_autowrap_mode>("autowrap_mode")
           .property<TextEdit::is_smooth_scroll_enabled, TextEdit::set_smooth_scroll_enabled>("scroll_smooth")
           .property<TextEdit::get_v_scroll_speed, TextEdit::set_v_scroll_speed>("scroll_v_scroll_speed")
           .property<TextEdit::is_scroll_past_end_of_file_enabled, TextEdit::set_scroll_past_end_of_file_enabled>("scroll_past_end_of_file")
           .property<TextEdit::get_v_scroll, TextEdit::set_v_scroll>("scroll_vertical")
           .property<TextEdit::get_h_scroll, TextEdit::set_h_scroll>("scroll_horizontal")
           .property<TextEdit::is_fit_content_height_enabled, TextEdit::set_fit_content_height_enabled>("scroll_fit_content_height")
           .property<TextEdit::is_drawing_minimap, TextEdit::set_draw_minimap>("minimap_draw")
           .property<TextEdit::get_minimap_width, TextEdit::set_minimap_width>("minimap_width")
           .property<TextEdit::get_caret_type, TextEdit::set_caret_type>("caret_type")
           .property<TextEdit::is_caret_blink_enabled, TextEdit::set_caret_blink_enabled>("caret_blink")
           .property<TextEdit::get_caret_blink_interval, TextEdit::set_caret_blink_interval>("caret_blink_interval")
           .property<TextEdit::is_drawing_caret_when_editable_disabled, TextEdit::set_draw_caret_when_editable_disabled>("caret_draw_when_editable_disabled")
           .property<TextEdit::is_move_caret_on_right_click_enabled, TextEdit::set_move_caret_on_right_click_enabled>("caret_move_on_right_click")
           .property<TextEdit::is_caret_mid_grapheme_enabled, TextEdit::set_caret_mid_grapheme_enabled>("caret_mid_grapheme")
           .property<TextEdit::is_multiple_carets_enabled, TextEdit::set_multiple_carets_enabled>("caret_multiple")
           .property<TextEdit::get_syntax_highlighter, TextEdit::set_syntax_highlighter>("syntax_highlighter")
           .property<TextEdit::is_highlight_all_occurrences_enabled, TextEdit::set_highlight_all_occurrences>("highlight_all_occurrences")
           .property<TextEdit::is_highlight_current_line_enabled, TextEdit::set_highlight_current_line>("highlight_current_line")
           .property<TextEdit::get_draw_control_chars, TextEdit::set_draw_control_chars>("draw_control_chars")
           .property<TextEdit::is_drawing_tabs, TextEdit::set_draw_tabs>("draw_tabs")
           .property<TextEdit::is_drawing_spaces, TextEdit::set_draw_spaces>("draw_spaces")
           .property<TextEdit::get_text_direction, TextEdit::set_text_direction>("text_direction")
           .property<TextEdit::get_language, TextEdit::set_language>("language")
           .property<TextEdit::get_structured_text_bidi_override, TextEdit::set_structured_text_bidi_override>("structured_text_bidi_override")
           .property<TextEdit::get_structured_text_bidi_override_options, TextEdit::set_structured_text_bidi_override_options>("structured_text_bidi_override_options")
		    .fun<static_cast<void(TextEdit::*)(int32_t,int32_t)>(&TextEdit::_handle_unicode_input)>("_handle_unicode_input")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::_backspace)>("_backspace")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::_cut)>("_cut")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::_copy)>("_copy")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::_paste)>("_paste")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::_paste_primary_clipboard)>("_paste_primary_clipboard")
		    .fun<static_cast<bool(TextEdit::*)()const>(&TextEdit::has_ime_text)>("has_ime_text")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::set_tab_size)>("set_tab_size")
		    .fun<static_cast<int32_t(TextEdit::*)()const>(&TextEdit::get_tab_size)>("get_tab_size")
		    .fun<static_cast<void(TextEdit::*)(bool)>(&TextEdit::set_overtype_mode_enabled)>("set_overtype_mode_enabled")
		    .fun<static_cast<bool(TextEdit::*)()const>(&TextEdit::is_overtype_mode_enabled)>("is_overtype_mode_enabled")
		    .fun<static_cast<void(TextEdit::*)()>(&TextEdit::clear)>("clear")
		    .fun<static_cast<int32_t(TextEdit::*)()const>(&TextEdit::get_line_count)>("get_line_count")
		    .fun<static_cast<void(TextEdit::*)(int32_t,const String &)>(&TextEdit::set_line)>("set_line")
		    .fun<static_cast<String(TextEdit::*)(int32_t)const>(&TextEdit::get_line)>("get_line")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t,int32_t)const>(&TextEdit::get_line_width)>("get_line_width")
		    .fun<static_cast<int32_t(TextEdit::*)()const>(&TextEdit::get_line_height)>("get_line_height")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t)const>(&TextEdit::get_indent_level)>("get_indent_level")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t)const>(&TextEdit::get_first_non_whitespace_column)>("get_first_non_whitespace_column")
		    .fun<static_cast<void(TextEdit::*)(int32_t,int32_t)>(&TextEdit::swap_lines)>("swap_lines")
		    .fun<static_cast<void(TextEdit::*)(int32_t,const String &)>(&TextEdit::insert_line_at)>("insert_line_at")
		    .fun<static_cast<void(TextEdit::*)(const String &,int32_t)>(&TextEdit::insert_text_at_caret)>("insert_text_at_caret")
		    .fun<static_cast<void(TextEdit::*)(int32_t,int32_t,int32_t,int32_t)>(&TextEdit::remove_text)>("remove_text")
		    .fun<static_cast<int32_t(TextEdit::*)()const>(&TextEdit::get_last_unhidden_line)>("get_last_unhidden_line")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t,int32_t)const>(&TextEdit::get_next_visible_line_offset_from)>("get_next_visible_line_offset_from")
		    .fun<static_cast<Vector2i(TextEdit::*)(int32_t,int32_t,int32_t)const>(&TextEdit::get_next_visible_line_index_offset_from)>("get_next_visible_line_index_offset_from")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::backspace)>("backspace")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::cut)>("cut")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::copy)>("copy")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::paste)>("paste")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::paste_primary_clipboard)>("paste_primary_clipboard")
		    .fun<static_cast<void(TextEdit::*)(TextEdit::EditAction)>(&TextEdit::start_action)>("start_action")
		    .fun<static_cast<void(TextEdit::*)()>(&TextEdit::end_action)>("end_action")
		    .fun<static_cast<void(TextEdit::*)()>(&TextEdit::begin_complex_operation)>("begin_complex_operation")
		    .fun<static_cast<void(TextEdit::*)()>(&TextEdit::end_complex_operation)>("end_complex_operation")
		    .fun<static_cast<bool(TextEdit::*)()const>(&TextEdit::has_undo)>("has_undo")
		    .fun<static_cast<bool(TextEdit::*)()const>(&TextEdit::has_redo)>("has_redo")
		    .fun<static_cast<void(TextEdit::*)()>(&TextEdit::undo)>("undo")
		    .fun<static_cast<void(TextEdit::*)()>(&TextEdit::redo)>("redo")
		    .fun<static_cast<void(TextEdit::*)()>(&TextEdit::clear_undo_history)>("clear_undo_history")
		    .fun<static_cast<void(TextEdit::*)()>(&TextEdit::tag_saved_version)>("tag_saved_version")
		    .fun<static_cast<uint32_t(TextEdit::*)()const>(&TextEdit::get_version)>("get_version")
		    .fun<static_cast<uint32_t(TextEdit::*)()const>(&TextEdit::get_saved_version)>("get_saved_version")
		    .fun<static_cast<void(TextEdit::*)(const String &)>(&TextEdit::set_search_text)>("set_search_text")
		    .fun<static_cast<void(TextEdit::*)(uint32_t)>(&TextEdit::set_search_flags)>("set_search_flags")
		    .fun<static_cast<Vector2i(TextEdit::*)(const String &,uint32_t,int32_t,int32_t)const>(&TextEdit::search)>("search")
		    .fun<static_cast<void(TextEdit::*)(const Callable &)>(&TextEdit::set_tooltip_request_func)>("set_tooltip_request_func")
		    .fun<static_cast<Vector2(TextEdit::*)()const>(&TextEdit::get_local_mouse_pos)>("get_local_mouse_pos")
		    .fun<static_cast<String(TextEdit::*)(const Vector2 &)const>(&TextEdit::get_word_at_pos)>("get_word_at_pos")
		    .fun<static_cast<Vector2i(TextEdit::*)(const Vector2i &,bool)const>(&TextEdit::get_line_column_at_pos)>("get_line_column_at_pos")
		    .fun<static_cast<Vector2i(TextEdit::*)(int32_t,int32_t)const>(&TextEdit::get_pos_at_line_column)>("get_pos_at_line_column")
		    .fun<static_cast<Rect2i(TextEdit::*)(int32_t,int32_t)const>(&TextEdit::get_rect_at_line_column)>("get_rect_at_line_column")
		    .fun<static_cast<int32_t(TextEdit::*)(const Vector2i &)const>(&TextEdit::get_minimap_line_at_pos)>("get_minimap_line_at_pos")
		    .fun<static_cast<bool(TextEdit::*)()const>(&TextEdit::is_dragging_cursor)>("is_dragging_cursor")
		    .fun<static_cast<bool(TextEdit::*)(bool,int32_t)const>(&TextEdit::is_mouse_over_selection)>("is_mouse_over_selection")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t,int32_t)>(&TextEdit::add_caret)>("add_caret")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::remove_caret)>("remove_caret")
		    .fun<static_cast<void(TextEdit::*)()>(&TextEdit::remove_secondary_carets)>("remove_secondary_carets")
		    .fun<static_cast<void(TextEdit::*)()>(&TextEdit::merge_overlapping_carets)>("merge_overlapping_carets")
		    .fun<static_cast<int32_t(TextEdit::*)()const>(&TextEdit::get_caret_count)>("get_caret_count")
		    .fun<static_cast<void(TextEdit::*)(bool)>(&TextEdit::add_caret_at_carets)>("add_caret_at_carets")
		    .fun<static_cast<PackedInt32Array(TextEdit::*)()>(&TextEdit::get_caret_index_edit_order)>("get_caret_index_edit_order")
		    .fun<static_cast<void(TextEdit::*)(int32_t,int32_t,int32_t,int32_t,int32_t)>(&TextEdit::adjust_carets_after_edit)>("adjust_carets_after_edit")
		    .fun<static_cast<bool(TextEdit::*)(int32_t)const>(&TextEdit::is_caret_visible)>("is_caret_visible")
		    .fun<static_cast<Vector2(TextEdit::*)(int32_t)const>(&TextEdit::get_caret_draw_pos)>("get_caret_draw_pos")
		    .fun<static_cast<void(TextEdit::*)(int32_t,bool,bool,int32_t,int32_t)>(&TextEdit::set_caret_line)>("set_caret_line")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t)const>(&TextEdit::get_caret_line)>("get_caret_line")
		    .fun<static_cast<void(TextEdit::*)(int32_t,bool,int32_t)>(&TextEdit::set_caret_column)>("set_caret_column")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t)const>(&TextEdit::get_caret_column)>("get_caret_column")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t)const>(&TextEdit::get_caret_wrap_index)>("get_caret_wrap_index")
		    .fun<static_cast<String(TextEdit::*)(int32_t)const>(&TextEdit::get_word_under_caret)>("get_word_under_caret")
		    .fun<static_cast<void(TextEdit::*)(TextEdit::SelectionMode,int32_t,int32_t,int32_t)>(&TextEdit::set_selection_mode)>("set_selection_mode")
		    .fun<static_cast<TextEdit::SelectionMode(TextEdit::*)()const>(&TextEdit::get_selection_mode)>("get_selection_mode")
		    .fun<static_cast<void(TextEdit::*)()>(&TextEdit::select_all)>("select_all")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::select_word_under_caret)>("select_word_under_caret")
		    .fun<static_cast<void(TextEdit::*)()>(&TextEdit::add_selection_for_next_occurrence)>("add_selection_for_next_occurrence")
		    .fun<static_cast<void(TextEdit::*)(int32_t,int32_t,int32_t,int32_t,int32_t)>(&TextEdit::select)>("select")
		    .fun<static_cast<bool(TextEdit::*)(int32_t)const>(&TextEdit::has_selection)>("has_selection")
		    .fun<static_cast<String(TextEdit::*)(int32_t)>(&TextEdit::get_selected_text)>("get_selected_text")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t)const>(&TextEdit::get_selection_line)>("get_selection_line")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t)const>(&TextEdit::get_selection_column)>("get_selection_column")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t)const>(&TextEdit::get_selection_from_line)>("get_selection_from_line")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t)const>(&TextEdit::get_selection_from_column)>("get_selection_from_column")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t)const>(&TextEdit::get_selection_to_line)>("get_selection_to_line")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t)const>(&TextEdit::get_selection_to_column)>("get_selection_to_column")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::deselect)>("deselect")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::delete_selection)>("delete_selection")
		    .fun<static_cast<bool(TextEdit::*)(int32_t)const>(&TextEdit::is_line_wrapped)>("is_line_wrapped")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t)const>(&TextEdit::get_line_wrap_count)>("get_line_wrap_count")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t,int32_t)const>(&TextEdit::get_line_wrap_index_at_column)>("get_line_wrap_index_at_column")
		    .fun<static_cast<PackedStringArray(TextEdit::*)(int32_t)const>(&TextEdit::get_line_wrapped_text)>("get_line_wrapped_text")
		    .fun<static_cast<VScrollBar *(TextEdit::*)()const>(&TextEdit::get_v_scroll_bar)>("get_v_scroll_bar")
		    .fun<static_cast<HScrollBar *(TextEdit::*)()const>(&TextEdit::get_h_scroll_bar)>("get_h_scroll_bar")
		    .fun<static_cast<double(TextEdit::*)(int32_t,int32_t)const>(&TextEdit::get_scroll_pos_for_line)>("get_scroll_pos_for_line")
		    .fun<static_cast<void(TextEdit::*)(int32_t,int32_t)>(&TextEdit::set_line_as_first_visible)>("set_line_as_first_visible")
		    .fun<static_cast<int32_t(TextEdit::*)()const>(&TextEdit::get_first_visible_line)>("get_first_visible_line")
		    .fun<static_cast<void(TextEdit::*)(int32_t,int32_t)>(&TextEdit::set_line_as_center_visible)>("set_line_as_center_visible")
		    .fun<static_cast<void(TextEdit::*)(int32_t,int32_t)>(&TextEdit::set_line_as_last_visible)>("set_line_as_last_visible")
		    .fun<static_cast<int32_t(TextEdit::*)()const>(&TextEdit::get_last_full_visible_line)>("get_last_full_visible_line")
		    .fun<static_cast<int32_t(TextEdit::*)()const>(&TextEdit::get_last_full_visible_line_wrap_index)>("get_last_full_visible_line_wrap_index")
		    .fun<static_cast<int32_t(TextEdit::*)()const>(&TextEdit::get_visible_line_count)>("get_visible_line_count")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t,int32_t)const>(&TextEdit::get_visible_line_count_in_range)>("get_visible_line_count_in_range")
		    .fun<static_cast<int32_t(TextEdit::*)()const>(&TextEdit::get_total_visible_line_count)>("get_total_visible_line_count")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::adjust_viewport_to_caret)>("adjust_viewport_to_caret")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::center_viewport_to_caret)>("center_viewport_to_caret")
		    .fun<static_cast<int32_t(TextEdit::*)()const>(&TextEdit::get_minimap_visible_lines)>("get_minimap_visible_lines")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::add_gutter)>("add_gutter")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::remove_gutter)>("remove_gutter")
		    .fun<static_cast<int32_t(TextEdit::*)()const>(&TextEdit::get_gutter_count)>("get_gutter_count")
		    .fun<static_cast<void(TextEdit::*)(int32_t,const String &)>(&TextEdit::set_gutter_name)>("set_gutter_name")
		    .fun<static_cast<String(TextEdit::*)(int32_t)const>(&TextEdit::get_gutter_name)>("get_gutter_name")
		    .fun<static_cast<void(TextEdit::*)(int32_t,TextEdit::GutterType)>(&TextEdit::set_gutter_type)>("set_gutter_type")
		    .fun<static_cast<TextEdit::GutterType(TextEdit::*)(int32_t)const>(&TextEdit::get_gutter_type)>("get_gutter_type")
		    .fun<static_cast<void(TextEdit::*)(int32_t,int32_t)>(&TextEdit::set_gutter_width)>("set_gutter_width")
		    .fun<static_cast<int32_t(TextEdit::*)(int32_t)const>(&TextEdit::get_gutter_width)>("get_gutter_width")
		    .fun<static_cast<void(TextEdit::*)(int32_t,bool)>(&TextEdit::set_gutter_draw)>("set_gutter_draw")
		    .fun<static_cast<bool(TextEdit::*)(int32_t)const>(&TextEdit::is_gutter_drawn)>("is_gutter_drawn")
		    .fun<static_cast<void(TextEdit::*)(int32_t,bool)>(&TextEdit::set_gutter_clickable)>("set_gutter_clickable")
		    .fun<static_cast<bool(TextEdit::*)(int32_t)const>(&TextEdit::is_gutter_clickable)>("is_gutter_clickable")
		    .fun<static_cast<void(TextEdit::*)(int32_t,bool)>(&TextEdit::set_gutter_overwritable)>("set_gutter_overwritable")
		    .fun<static_cast<bool(TextEdit::*)(int32_t)const>(&TextEdit::is_gutter_overwritable)>("is_gutter_overwritable")
		    .fun<static_cast<void(TextEdit::*)(int32_t,int32_t)>(&TextEdit::merge_gutters)>("merge_gutters")
		    .fun<static_cast<void(TextEdit::*)(int32_t,const Callable &)>(&TextEdit::set_gutter_custom_draw)>("set_gutter_custom_draw")
		    .fun<static_cast<int32_t(TextEdit::*)()const>(&TextEdit::get_total_gutter_width)>("get_total_gutter_width")
		    .fun<static_cast<void(TextEdit::*)(int32_t,int32_t,const Variant &)>(&TextEdit::set_line_gutter_metadata)>("set_line_gutter_metadata")
		    .fun<static_cast<Variant(TextEdit::*)(int32_t,int32_t)const>(&TextEdit::get_line_gutter_metadata)>("get_line_gutter_metadata")
		    .fun<static_cast<void(TextEdit::*)(int32_t,int32_t,const String &)>(&TextEdit::set_line_gutter_text)>("set_line_gutter_text")
		    .fun<static_cast<String(TextEdit::*)(int32_t,int32_t)const>(&TextEdit::get_line_gutter_text)>("get_line_gutter_text")
		    .fun<static_cast<void(TextEdit::*)(int32_t,int32_t,const Ref<Texture2D> &)>(&TextEdit::set_line_gutter_icon)>("set_line_gutter_icon")
		    .fun<static_cast<Ref<Texture2D>(TextEdit::*)(int32_t,int32_t)const>(&TextEdit::get_line_gutter_icon)>("get_line_gutter_icon")
		    .fun<static_cast<void(TextEdit::*)(int32_t,int32_t,const Color &)>(&TextEdit::set_line_gutter_item_color)>("set_line_gutter_item_color")
		    .fun<static_cast<Color(TextEdit::*)(int32_t,int32_t)const>(&TextEdit::get_line_gutter_item_color)>("get_line_gutter_item_color")
		    .fun<static_cast<void(TextEdit::*)(int32_t,int32_t,bool)>(&TextEdit::set_line_gutter_clickable)>("set_line_gutter_clickable")
		    .fun<static_cast<bool(TextEdit::*)(int32_t,int32_t)const>(&TextEdit::is_line_gutter_clickable)>("is_line_gutter_clickable")
		    .fun<static_cast<void(TextEdit::*)(int32_t,const Color &)>(&TextEdit::set_line_background_color)>("set_line_background_color")
		    .fun<static_cast<Color(TextEdit::*)(int32_t)const>(&TextEdit::get_line_background_color)>("get_line_background_color")
		    .fun<static_cast<PopupMenu *(TextEdit::*)()const>(&TextEdit::get_menu)>("get_menu")
		    .fun<static_cast<bool(TextEdit::*)()const>(&TextEdit::is_menu_visible)>("is_menu_visible")
		    .fun<static_cast<void(TextEdit::*)(int32_t)>(&TextEdit::menu_option)>("menu_option")
;}