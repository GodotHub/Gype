#include <godot_cpp/classes/particle_process_material.hpp>
#include <godot_cpp/classes/ref.hpp>
#include <godot_cpp/variant/color.hpp>
#include <godot_cpp/variant/vector2.hpp>
#include <godot_cpp/variant/vector3.hpp>
#include <godot_cpp/classes/material.hpp>
#include <godot_cpp/classes/texture2d.hpp>
#include <stdint.h>
#include <utility>

#include "register/register_classes.h"
#include "qjspp/utils.h"
#include "qjspp.hpp"

using namespace godot;

void register_classes_ParticleProcessMaterial() {
    qjs::Context::Module &_module = get_General_module();
    _module.class_<ParticleProcessMaterial>("ParticleProcessMaterial")
            .constructor<>()
            .base<Material>()
            .property<static_cast<double(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_lifetime_randomness),static_cast<void(ParticleProcessMaterial::*)(double)>(&ParticleProcessMaterial::set_lifetime_randomness)>("lifetime_randomness")
            .property<static_cast<bool(ParticleProcessMaterial::*)(ParticleProcessMaterial::ParticleFlags)const>(&ParticleProcessMaterial::get_particle_flag),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::ParticleFlags,bool)>(&ParticleProcessMaterial::set_particle_flag)>("particle_flag_align_y")
            .property<static_cast<bool(ParticleProcessMaterial::*)(ParticleProcessMaterial::ParticleFlags)const>(&ParticleProcessMaterial::get_particle_flag),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::ParticleFlags,bool)>(&ParticleProcessMaterial::set_particle_flag)>("particle_flag_rotate_y")
            .property<static_cast<bool(ParticleProcessMaterial::*)(ParticleProcessMaterial::ParticleFlags)const>(&ParticleProcessMaterial::get_particle_flag),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::ParticleFlags,bool)>(&ParticleProcessMaterial::set_particle_flag)>("particle_flag_disable_z")
            .property<static_cast<bool(ParticleProcessMaterial::*)(ParticleProcessMaterial::ParticleFlags)const>(&ParticleProcessMaterial::get_particle_flag),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::ParticleFlags,bool)>(&ParticleProcessMaterial::set_particle_flag)>("particle_flag_damping_as_friction")
            .property<static_cast<Vector3(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_emission_shape_offset),static_cast<void(ParticleProcessMaterial::*)(const Vector3 &)>(&ParticleProcessMaterial::set_emission_shape_offset)>("emission_shape_offset")
            .property<static_cast<Vector3(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_emission_shape_scale),static_cast<void(ParticleProcessMaterial::*)(const Vector3 &)>(&ParticleProcessMaterial::set_emission_shape_scale)>("emission_shape_scale")
            .property<static_cast<ParticleProcessMaterial::EmissionShape(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_emission_shape),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::EmissionShape)>(&ParticleProcessMaterial::set_emission_shape)>("emission_shape")
            .property<static_cast<double(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_emission_sphere_radius),static_cast<void(ParticleProcessMaterial::*)(double)>(&ParticleProcessMaterial::set_emission_sphere_radius)>("emission_sphere_radius")
            .property<static_cast<Vector3(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_emission_box_extents),static_cast<void(ParticleProcessMaterial::*)(const Vector3 &)>(&ParticleProcessMaterial::set_emission_box_extents)>("emission_box_extents")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_emission_point_texture),static_cast<void(ParticleProcessMaterial::*)(const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_emission_point_texture)>("emission_point_texture")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_emission_normal_texture),static_cast<void(ParticleProcessMaterial::*)(const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_emission_normal_texture)>("emission_normal_texture")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_emission_color_texture),static_cast<void(ParticleProcessMaterial::*)(const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_emission_color_texture)>("emission_color_texture")
            .property<static_cast<int32_t(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_emission_point_count),static_cast<void(ParticleProcessMaterial::*)(int32_t)>(&ParticleProcessMaterial::set_emission_point_count)>("emission_point_count")
            .property<static_cast<Vector3(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_emission_ring_axis),static_cast<void(ParticleProcessMaterial::*)(const Vector3 &)>(&ParticleProcessMaterial::set_emission_ring_axis)>("emission_ring_axis")
            .property<static_cast<double(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_emission_ring_height),static_cast<void(ParticleProcessMaterial::*)(double)>(&ParticleProcessMaterial::set_emission_ring_height)>("emission_ring_height")
            .property<static_cast<double(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_emission_ring_radius),static_cast<void(ParticleProcessMaterial::*)(double)>(&ParticleProcessMaterial::set_emission_ring_radius)>("emission_ring_radius")
            .property<static_cast<double(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_emission_ring_inner_radius),static_cast<void(ParticleProcessMaterial::*)(double)>(&ParticleProcessMaterial::set_emission_ring_inner_radius)>("emission_ring_inner_radius")
            .property<static_cast<Vector2(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Vector2 &)>(&ParticleProcessMaterial::set_param)>("angle")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_min),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_min)>("angle_min")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_max),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_max)>("angle_max")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_texture),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_param_texture)>("angle_curve")
            .property<static_cast<double(ParticleProcessMaterial::*)()>(&ParticleProcessMaterial::get_inherit_velocity_ratio),static_cast<void(ParticleProcessMaterial::*)(double)>(&ParticleProcessMaterial::set_inherit_velocity_ratio)>("inherit_velocity_ratio")
            .property<static_cast<Vector3(ParticleProcessMaterial::*)()>(&ParticleProcessMaterial::get_velocity_pivot),static_cast<void(ParticleProcessMaterial::*)(const Vector3 &)>(&ParticleProcessMaterial::set_velocity_pivot)>("velocity_pivot")
            .property<static_cast<Vector3(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_direction),static_cast<void(ParticleProcessMaterial::*)(const Vector3 &)>(&ParticleProcessMaterial::set_direction)>("direction")
            .property<static_cast<double(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_spread),static_cast<void(ParticleProcessMaterial::*)(double)>(&ParticleProcessMaterial::set_spread)>("spread")
            .property<static_cast<double(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_flatness),static_cast<void(ParticleProcessMaterial::*)(double)>(&ParticleProcessMaterial::set_flatness)>("flatness")
            .property<static_cast<Vector2(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Vector2 &)>(&ParticleProcessMaterial::set_param)>("initial_velocity")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_min),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_min)>("initial_velocity_min")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_max),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_max)>("initial_velocity_max")
            .property<static_cast<Vector2(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Vector2 &)>(&ParticleProcessMaterial::set_param)>("angular_velocity")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_min),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_min)>("angular_velocity_min")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_max),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_max)>("angular_velocity_max")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_texture),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_param_texture)>("angular_velocity_curve")
            .property<static_cast<Vector2(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Vector2 &)>(&ParticleProcessMaterial::set_param)>("directional_velocity")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_min),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_min)>("directional_velocity_min")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_max),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_max)>("directional_velocity_max")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_texture),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_param_texture)>("directional_velocity_curve")
            .property<static_cast<Vector2(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Vector2 &)>(&ParticleProcessMaterial::set_param)>("orbit_velocity")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_min),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_min)>("orbit_velocity_min")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_max),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_max)>("orbit_velocity_max")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_texture),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_param_texture)>("orbit_velocity_curve")
            .property<static_cast<Vector2(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Vector2 &)>(&ParticleProcessMaterial::set_param)>("radial_velocity")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_min),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_min)>("radial_velocity_min")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_max),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_max)>("radial_velocity_max")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_texture),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_param_texture)>("radial_velocity_curve")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_velocity_limit_curve),static_cast<void(ParticleProcessMaterial::*)(const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_velocity_limit_curve)>("velocity_limit_curve")
            .property<static_cast<Vector3(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_gravity),static_cast<void(ParticleProcessMaterial::*)(const Vector3 &)>(&ParticleProcessMaterial::set_gravity)>("gravity")
            .property<static_cast<Vector2(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Vector2 &)>(&ParticleProcessMaterial::set_param)>("linear_accel")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_min),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_min)>("linear_accel_min")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_max),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_max)>("linear_accel_max")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_texture),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_param_texture)>("linear_accel_curve")
            .property<static_cast<Vector2(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Vector2 &)>(&ParticleProcessMaterial::set_param)>("radial_accel")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_min),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_min)>("radial_accel_min")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_max),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_max)>("radial_accel_max")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_texture),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_param_texture)>("radial_accel_curve")
            .property<static_cast<Vector2(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Vector2 &)>(&ParticleProcessMaterial::set_param)>("tangential_accel")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_min),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_min)>("tangential_accel_min")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_max),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_max)>("tangential_accel_max")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_texture),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_param_texture)>("tangential_accel_curve")
            .property<static_cast<Vector2(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Vector2 &)>(&ParticleProcessMaterial::set_param)>("damping")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_min),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_min)>("damping_min")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_max),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_max)>("damping_max")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_texture),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_param_texture)>("damping_curve")
            .property<static_cast<bool(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::is_attractor_interaction_enabled),static_cast<void(ParticleProcessMaterial::*)(bool)>(&ParticleProcessMaterial::set_attractor_interaction_enabled)>("attractor_interaction_enabled")
            .property<static_cast<Vector2(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Vector2 &)>(&ParticleProcessMaterial::set_param)>("scale")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_min),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_min)>("scale_min")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_max),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_max)>("scale_max")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_texture),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_param_texture)>("scale_curve")
            .property<static_cast<Vector2(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Vector2 &)>(&ParticleProcessMaterial::set_param)>("scale_over_velocity")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_min),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_min)>("scale_over_velocity_min")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_max),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_max)>("scale_over_velocity_max")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_texture),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_param_texture)>("scale_over_velocity_curve")
            .property<static_cast<Color(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_color),static_cast<void(ParticleProcessMaterial::*)(const Color &)>(&ParticleProcessMaterial::set_color)>("color")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_color_ramp),static_cast<void(ParticleProcessMaterial::*)(const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_color_ramp)>("color_ramp")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_color_initial_ramp),static_cast<void(ParticleProcessMaterial::*)(const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_color_initial_ramp)>("color_initial_ramp")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_alpha_curve),static_cast<void(ParticleProcessMaterial::*)(const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_alpha_curve)>("alpha_curve")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_emission_curve),static_cast<void(ParticleProcessMaterial::*)(const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_emission_curve)>("emission_curve")
            .property<static_cast<Vector2(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Vector2 &)>(&ParticleProcessMaterial::set_param)>("hue_variation")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_min),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_min)>("hue_variation_min")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_max),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_max)>("hue_variation_max")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_texture),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_param_texture)>("hue_variation_curve")
            .property<static_cast<Vector2(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Vector2 &)>(&ParticleProcessMaterial::set_param)>("anim_speed")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_min),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_min)>("anim_speed_min")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_max),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_max)>("anim_speed_max")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_texture),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_param_texture)>("anim_speed_curve")
            .property<static_cast<Vector2(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Vector2 &)>(&ParticleProcessMaterial::set_param)>("anim_offset")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_min),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_min)>("anim_offset_min")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_max),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_max)>("anim_offset_max")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_texture),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_param_texture)>("anim_offset_curve")
            .property<static_cast<bool(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_turbulence_enabled),static_cast<void(ParticleProcessMaterial::*)(bool)>(&ParticleProcessMaterial::set_turbulence_enabled)>("turbulence_enabled")
            .property<static_cast<double(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_turbulence_noise_strength),static_cast<void(ParticleProcessMaterial::*)(double)>(&ParticleProcessMaterial::set_turbulence_noise_strength)>("turbulence_noise_strength")
            .property<static_cast<double(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_turbulence_noise_scale),static_cast<void(ParticleProcessMaterial::*)(double)>(&ParticleProcessMaterial::set_turbulence_noise_scale)>("turbulence_noise_scale")
            .property<static_cast<Vector3(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_turbulence_noise_speed),static_cast<void(ParticleProcessMaterial::*)(const Vector3 &)>(&ParticleProcessMaterial::set_turbulence_noise_speed)>("turbulence_noise_speed")
            .property<static_cast<double(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_turbulence_noise_speed_random),static_cast<void(ParticleProcessMaterial::*)(double)>(&ParticleProcessMaterial::set_turbulence_noise_speed_random)>("turbulence_noise_speed_random")
            .property<static_cast<Vector2(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Vector2 &)>(&ParticleProcessMaterial::set_param)>("turbulence_influence")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_min),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_min)>("turbulence_influence_min")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_max),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_max)>("turbulence_influence_max")
            .property<static_cast<Vector2(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Vector2 &)>(&ParticleProcessMaterial::set_param)>("turbulence_initial_displacement")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_min),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_min)>("turbulence_initial_displacement_min")
            .property<static_cast<double(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_max),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,double)>(&ParticleProcessMaterial::set_param_max)>("turbulence_initial_displacement_max")
            .property<static_cast<Ref<Texture2D>(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter)const>(&ParticleProcessMaterial::get_param_texture),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::Parameter,const Ref<Texture2D> &)>(&ParticleProcessMaterial::set_param_texture)>("turbulence_influence_over_life")
            .property<static_cast<ParticleProcessMaterial::CollisionMode(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_collision_mode),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::CollisionMode)>(&ParticleProcessMaterial::set_collision_mode)>("collision_mode")
            .property<static_cast<double(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_collision_friction),static_cast<void(ParticleProcessMaterial::*)(double)>(&ParticleProcessMaterial::set_collision_friction)>("collision_friction")
            .property<static_cast<double(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_collision_bounce),static_cast<void(ParticleProcessMaterial::*)(double)>(&ParticleProcessMaterial::set_collision_bounce)>("collision_bounce")
            .property<static_cast<bool(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::is_collision_using_scale),static_cast<void(ParticleProcessMaterial::*)(bool)>(&ParticleProcessMaterial::set_collision_use_scale)>("collision_use_scale")
            .property<static_cast<ParticleProcessMaterial::SubEmitterMode(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_sub_emitter_mode),static_cast<void(ParticleProcessMaterial::*)(ParticleProcessMaterial::SubEmitterMode)>(&ParticleProcessMaterial::set_sub_emitter_mode)>("sub_emitter_mode")
            .property<static_cast<double(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_sub_emitter_frequency),static_cast<void(ParticleProcessMaterial::*)(double)>(&ParticleProcessMaterial::set_sub_emitter_frequency)>("sub_emitter_frequency")
            .property<static_cast<int32_t(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_sub_emitter_amount_at_end),static_cast<void(ParticleProcessMaterial::*)(int32_t)>(&ParticleProcessMaterial::set_sub_emitter_amount_at_end)>("sub_emitter_amount_at_end")
            .property<static_cast<int32_t(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_sub_emitter_amount_at_collision),static_cast<void(ParticleProcessMaterial::*)(int32_t)>(&ParticleProcessMaterial::set_sub_emitter_amount_at_collision)>("sub_emitter_amount_at_collision")
            .property<static_cast<bool(ParticleProcessMaterial::*)()const>(&ParticleProcessMaterial::get_sub_emitter_keep_velocity),static_cast<void(ParticleProcessMaterial::*)(bool)>(&ParticleProcessMaterial::set_sub_emitter_keep_velocity)>("sub_emitter_keep_velocity")
;    qjs::Value _Parameter = context->newObject();
    _Parameter["PARAM_INITIAL_LINEAR_VELOCITY"] = ParticleProcessMaterial::Parameter::PARAM_INITIAL_LINEAR_VELOCITY;
    _Parameter["PARAM_ANGULAR_VELOCITY"] = ParticleProcessMaterial::Parameter::PARAM_ANGULAR_VELOCITY;
    _Parameter["PARAM_ORBIT_VELOCITY"] = ParticleProcessMaterial::Parameter::PARAM_ORBIT_VELOCITY;
    _Parameter["PARAM_LINEAR_ACCEL"] = ParticleProcessMaterial::Parameter::PARAM_LINEAR_ACCEL;
    _Parameter["PARAM_RADIAL_ACCEL"] = ParticleProcessMaterial::Parameter::PARAM_RADIAL_ACCEL;
    _Parameter["PARAM_TANGENTIAL_ACCEL"] = ParticleProcessMaterial::Parameter::PARAM_TANGENTIAL_ACCEL;
    _Parameter["PARAM_DAMPING"] = ParticleProcessMaterial::Parameter::PARAM_DAMPING;
    _Parameter["PARAM_ANGLE"] = ParticleProcessMaterial::Parameter::PARAM_ANGLE;
    _Parameter["PARAM_SCALE"] = ParticleProcessMaterial::Parameter::PARAM_SCALE;
    _Parameter["PARAM_HUE_VARIATION"] = ParticleProcessMaterial::Parameter::PARAM_HUE_VARIATION;
    _Parameter["PARAM_ANIM_SPEED"] = ParticleProcessMaterial::Parameter::PARAM_ANIM_SPEED;
    _Parameter["PARAM_ANIM_OFFSET"] = ParticleProcessMaterial::Parameter::PARAM_ANIM_OFFSET;
    _Parameter["PARAM_RADIAL_VELOCITY"] = ParticleProcessMaterial::Parameter::PARAM_RADIAL_VELOCITY;
    _Parameter["PARAM_DIRECTIONAL_VELOCITY"] = ParticleProcessMaterial::Parameter::PARAM_DIRECTIONAL_VELOCITY;
    _Parameter["PARAM_SCALE_OVER_VELOCITY"] = ParticleProcessMaterial::Parameter::PARAM_SCALE_OVER_VELOCITY;
    _Parameter["PARAM_MAX"] = ParticleProcessMaterial::Parameter::PARAM_MAX;
    _Parameter["PARAM_TURB_VEL_INFLUENCE"] = ParticleProcessMaterial::Parameter::PARAM_TURB_VEL_INFLUENCE;
    _Parameter["PARAM_TURB_INIT_DISPLACEMENT"] = ParticleProcessMaterial::Parameter::PARAM_TURB_INIT_DISPLACEMENT;
    _Parameter["PARAM_TURB_INFLUENCE_OVER_LIFE"] = ParticleProcessMaterial::Parameter::PARAM_TURB_INFLUENCE_OVER_LIFE;
    _module.add("Parameter", std::move(_Parameter));
    qjs::Value _ParticleFlags = context->newObject();
    _ParticleFlags["PARTICLE_FLAG_ALIGN_Y_TO_VELOCITY"] = ParticleProcessMaterial::ParticleFlags::PARTICLE_FLAG_ALIGN_Y_TO_VELOCITY;
    _ParticleFlags["PARTICLE_FLAG_ROTATE_Y"] = ParticleProcessMaterial::ParticleFlags::PARTICLE_FLAG_ROTATE_Y;
    _ParticleFlags["PARTICLE_FLAG_DISABLE_Z"] = ParticleProcessMaterial::ParticleFlags::PARTICLE_FLAG_DISABLE_Z;
    _ParticleFlags["PARTICLE_FLAG_DAMPING_AS_FRICTION"] = ParticleProcessMaterial::ParticleFlags::PARTICLE_FLAG_DAMPING_AS_FRICTION;
    _ParticleFlags["PARTICLE_FLAG_MAX"] = ParticleProcessMaterial::ParticleFlags::PARTICLE_FLAG_MAX;
    _module.add("ParticleFlags", std::move(_ParticleFlags));
    qjs::Value _EmissionShape = context->newObject();
    _EmissionShape["EMISSION_SHAPE_POINT"] = ParticleProcessMaterial::EmissionShape::EMISSION_SHAPE_POINT;
    _EmissionShape["EMISSION_SHAPE_SPHERE"] = ParticleProcessMaterial::EmissionShape::EMISSION_SHAPE_SPHERE;
    _EmissionShape["EMISSION_SHAPE_SPHERE_SURFACE"] = ParticleProcessMaterial::EmissionShape::EMISSION_SHAPE_SPHERE_SURFACE;
    _EmissionShape["EMISSION_SHAPE_BOX"] = ParticleProcessMaterial::EmissionShape::EMISSION_SHAPE_BOX;
    _EmissionShape["EMISSION_SHAPE_POINTS"] = ParticleProcessMaterial::EmissionShape::EMISSION_SHAPE_POINTS;
    _EmissionShape["EMISSION_SHAPE_DIRECTED_POINTS"] = ParticleProcessMaterial::EmissionShape::EMISSION_SHAPE_DIRECTED_POINTS;
    _EmissionShape["EMISSION_SHAPE_RING"] = ParticleProcessMaterial::EmissionShape::EMISSION_SHAPE_RING;
    _EmissionShape["EMISSION_SHAPE_MAX"] = ParticleProcessMaterial::EmissionShape::EMISSION_SHAPE_MAX;
    _module.add("EmissionShape", std::move(_EmissionShape));
    qjs::Value _SubEmitterMode = context->newObject();
    _SubEmitterMode["SUB_EMITTER_DISABLED"] = ParticleProcessMaterial::SubEmitterMode::SUB_EMITTER_DISABLED;
    _SubEmitterMode["SUB_EMITTER_CONSTANT"] = ParticleProcessMaterial::SubEmitterMode::SUB_EMITTER_CONSTANT;
    _SubEmitterMode["SUB_EMITTER_AT_END"] = ParticleProcessMaterial::SubEmitterMode::SUB_EMITTER_AT_END;
    _SubEmitterMode["SUB_EMITTER_AT_COLLISION"] = ParticleProcessMaterial::SubEmitterMode::SUB_EMITTER_AT_COLLISION;
    _SubEmitterMode["SUB_EMITTER_MAX"] = ParticleProcessMaterial::SubEmitterMode::SUB_EMITTER_MAX;
    _module.add("SubEmitterMode", std::move(_SubEmitterMode));
    qjs::Value _CollisionMode = context->newObject();
    _CollisionMode["COLLISION_DISABLED"] = ParticleProcessMaterial::CollisionMode::COLLISION_DISABLED;
    _CollisionMode["COLLISION_RIGID"] = ParticleProcessMaterial::CollisionMode::COLLISION_RIGID;
    _CollisionMode["COLLISION_HIDE_ON_CONTACT"] = ParticleProcessMaterial::CollisionMode::COLLISION_HIDE_ON_CONTACT;
    _CollisionMode["COLLISION_MAX"] = ParticleProcessMaterial::CollisionMode::COLLISION_MAX;
    _module.add("CollisionMode", std::move(_CollisionMode));
}