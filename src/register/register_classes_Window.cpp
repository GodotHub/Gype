#include <godot_cpp/classes/font.hpp>
#include <godot_cpp/classes/node.hpp>
#include <godot_cpp/classes/ref.hpp>
#include <godot_cpp/classes/style_box.hpp>
#include <godot_cpp/classes/texture2d.hpp>
#include <godot_cpp/classes/theme.hpp>
#include <godot_cpp/classes/window.hpp>
#include <godot_cpp/variant/color.hpp>
#include <godot_cpp/variant/rect2i.hpp>
#include <godot_cpp/variant/string_name.hpp>
#include <godot_cpp/variant/vector2.hpp>
#include <godot_cpp/variant/vector2i.hpp>

#include "qjspp.hpp"
#include "register/register_classes.h"

using namespace godot;

void register_classes_Window() {
	qjs::Context::Module &_module = _Node;
	_module.class_<Window>("Window")
			.constructor<>()
			.property<&Window::get_mode, &Window::set_mode>("mode")
			.property<&Window::get_title, &Window::set_title>("title")
			.property<&Window::get_initial_position, &Window::set_initial_position>("initial_position")
			.property<&Window::get_position, &Window::set_position>("position")
			.property<&Window::get_size, &Window::set_size>("size")
			.property<&Window::get_current_screen, &Window::set_current_screen>("current_screen")
			.property<&Window::get_mouse_passthrough_polygon, &Window::set_mouse_passthrough_polygon>("mouse_passthrough_polygon")
			.property<&Window::is_visible, &Window::set_visible>("visible")
			.property<&Window::is_wrapping_controls, &Window::set_wrap_controls>("wrap_controls")
			.property<&Window::is_transient, &Window::set_transient>("transient")
			.property<&Window::is_exclusive, &Window::set_exclusive>("exclusive")
			.property<&Window::get_flag, &Window::set_flag>("unresizable")
			.property<&Window::get_flag, &Window::set_flag>("borderless")
			.property<&Window::get_flag, &Window::set_flag>("always_on_top")
			.property<&Window::get_flag, &Window::set_flag>("transparent")
			.property<&Window::get_flag, &Window::set_flag>("unfocusable")
			.property<&Window::get_flag, &Window::set_flag>("popup_window")
			.property<&Window::get_flag, &Window::set_flag>("extend_to_title")
			.property<&Window::get_flag, &Window::set_flag>("mouse_passthrough")
			.property<&Window::get_min_size, &Window::set_min_size>("min_size")
			.property<&Window::get_max_size, &Window::set_max_size>("max_size")
			.property<&Window::get_keep_title_visible, &Window::set_keep_title_visible>("keep_title_visible")
			.property<&Window::get_content_scale_size, &Window::set_content_scale_size>("content_scale_size")
			.property<&Window::get_content_scale_mode, &Window::set_content_scale_mode>("content_scale_mode")
			.property<&Window::get_content_scale_aspect, &Window::set_content_scale_aspect>("content_scale_aspect")
			.property<&Window::get_content_scale_stretch, &Window::set_content_scale_stretch>("content_scale_stretch")
			.property<&Window::get_content_scale_factor, &Window::set_content_scale_factor>("content_scale_factor")
			.property<&Window::is_auto_translating, &Window::set_auto_translate>("auto_translate")
			.property<&Window::get_theme, &Window::set_theme>("theme")
			.property<&Window::get_theme_type_variation, &Window::set_theme_type_variation>("theme_type_variation")
			.fun<static_cast<Vector2 (Window::*)() const>(&Window::_get_contents_minimum_size)>("_get_contents_minimum_size")
			.fun<static_cast<int32_t (Window::*)() const>(&Window::get_window_id)>("get_window_id")
			.fun<static_cast<void (Window::*)()>(&Window::move_to_center)>("move_to_center")
			.fun<static_cast<void (Window::*)()>(&Window::reset_size)>("reset_size")
			.fun<static_cast<Vector2i (Window::*)() const>(&Window::get_position_with_decorations)>("get_position_with_decorations")
			.fun<static_cast<Vector2i (Window::*)() const>(&Window::get_size_with_decorations)>("get_size_with_decorations")
			.fun<static_cast<bool (Window::*)() const>(&Window::is_maximize_allowed)>("is_maximize_allowed")
			.fun<static_cast<void (Window::*)()>(&Window::request_attention)>("request_attention")
			.fun<static_cast<void (Window::*)()>(&Window::move_to_foreground)>("move_to_foreground")
			.fun<static_cast<void (Window::*)()>(&Window::hide)>("hide")
			.fun<static_cast<void (Window::*)()>(&Window::show)>("show")
			.fun<static_cast<void (Window::*)(bool)>(&Window::set_unparent_when_invisible)>("set_unparent_when_invisible")
			.fun<static_cast<bool (Window::*)() const>(&Window::can_draw)>("can_draw")
			.fun<static_cast<bool (Window::*)() const>(&Window::has_focus)>("has_focus")
			.fun<static_cast<void (Window::*)()>(&Window::grab_focus)>("grab_focus")
			.fun<static_cast<void (Window::*)(bool)>(&Window::set_ime_active)>("set_ime_active")
			.fun<static_cast<void (Window::*)(const Vector2i &)>(&Window::set_ime_position)>("set_ime_position")
			.fun<static_cast<bool (Window::*)() const>(&Window::is_embedded)>("is_embedded")
			.fun<static_cast<Vector2 (Window::*)() const>(&Window::get_contents_minimum_size)>("get_contents_minimum_size")
			.fun<static_cast<void (Window::*)(bool)>(&Window::set_use_font_oversampling)>("set_use_font_oversampling")
			.fun<static_cast<bool (Window::*)() const>(&Window::is_using_font_oversampling)>("is_using_font_oversampling")
			.fun<static_cast<void (Window::*)()>(&Window::child_controls_changed)>("child_controls_changed")
			.fun<static_cast<void (Window::*)()>(&Window::begin_bulk_theme_override)>("begin_bulk_theme_override")
			.fun<static_cast<void (Window::*)()>(&Window::end_bulk_theme_override)>("end_bulk_theme_override")
			.fun<static_cast<void (Window::*)(const StringName &, const Ref<Texture2D> &)>(&Window::add_theme_icon_override)>("add_theme_icon_override")
			.fun<static_cast<void (Window::*)(const StringName &, const Ref<StyleBox> &)>(&Window::add_theme_stylebox_override)>("add_theme_stylebox_override")
			.fun<static_cast<void (Window::*)(const StringName &, const Ref<Font> &)>(&Window::add_theme_font_override)>("add_theme_font_override")
			.fun<static_cast<void (Window::*)(const StringName &, int32_t)>(&Window::add_theme_font_size_override)>("add_theme_font_size_override")
			.fun<static_cast<void (Window::*)(const StringName &, const Color &)>(&Window::add_theme_color_override)>("add_theme_color_override")
			.fun<static_cast<void (Window::*)(const StringName &, int32_t)>(&Window::add_theme_constant_override)>("add_theme_constant_override")
			.fun<static_cast<void (Window::*)(const StringName &)>(&Window::remove_theme_icon_override)>("remove_theme_icon_override")
			.fun<static_cast<void (Window::*)(const StringName &)>(&Window::remove_theme_stylebox_override)>("remove_theme_stylebox_override")
			.fun<static_cast<void (Window::*)(const StringName &)>(&Window::remove_theme_font_override)>("remove_theme_font_override")
			.fun<static_cast<void (Window::*)(const StringName &)>(&Window::remove_theme_font_size_override)>("remove_theme_font_size_override")
			.fun<static_cast<void (Window::*)(const StringName &)>(&Window::remove_theme_color_override)>("remove_theme_color_override")
			.fun<static_cast<void (Window::*)(const StringName &)>(&Window::remove_theme_constant_override)>("remove_theme_constant_override")
			.fun<static_cast<Ref<Texture2D> (Window::*)(const StringName &, const StringName &) const>(&Window::get_theme_icon)>("get_theme_icon")
			.fun<static_cast<Ref<StyleBox> (Window::*)(const StringName &, const StringName &) const>(&Window::get_theme_stylebox)>("get_theme_stylebox")
			.fun<static_cast<Ref<Font> (Window::*)(const StringName &, const StringName &) const>(&Window::get_theme_font)>("get_theme_font")
			.fun<static_cast<int32_t (Window::*)(const StringName &, const StringName &) const>(&Window::get_theme_font_size)>("get_theme_font_size")
			.fun<static_cast<Color (Window::*)(const StringName &, const StringName &) const>(&Window::get_theme_color)>("get_theme_color")
			.fun<static_cast<int32_t (Window::*)(const StringName &, const StringName &) const>(&Window::get_theme_constant)>("get_theme_constant")
			.fun<static_cast<bool (Window::*)(const StringName &) const>(&Window::has_theme_icon_override)>("has_theme_icon_override")
			.fun<static_cast<bool (Window::*)(const StringName &) const>(&Window::has_theme_stylebox_override)>("has_theme_stylebox_override")
			.fun<static_cast<bool (Window::*)(const StringName &) const>(&Window::has_theme_font_override)>("has_theme_font_override")
			.fun<static_cast<bool (Window::*)(const StringName &) const>(&Window::has_theme_font_size_override)>("has_theme_font_size_override")
			.fun<static_cast<bool (Window::*)(const StringName &) const>(&Window::has_theme_color_override)>("has_theme_color_override")
			.fun<static_cast<bool (Window::*)(const StringName &) const>(&Window::has_theme_constant_override)>("has_theme_constant_override")
			.fun<static_cast<bool (Window::*)(const StringName &, const StringName &) const>(&Window::has_theme_icon)>("has_theme_icon")
			.fun<static_cast<bool (Window::*)(const StringName &, const StringName &) const>(&Window::has_theme_stylebox)>("has_theme_stylebox")
			.fun<static_cast<bool (Window::*)(const StringName &, const StringName &) const>(&Window::has_theme_font)>("has_theme_font")
			.fun<static_cast<bool (Window::*)(const StringName &, const StringName &) const>(&Window::has_theme_font_size)>("has_theme_font_size")
			.fun<static_cast<bool (Window::*)(const StringName &, const StringName &) const>(&Window::has_theme_color)>("has_theme_color")
			.fun<static_cast<bool (Window::*)(const StringName &, const StringName &) const>(&Window::has_theme_constant)>("has_theme_constant")
			.fun<static_cast<double (Window::*)() const>(&Window::get_theme_default_base_scale)>("get_theme_default_base_scale")
			.fun<static_cast<Ref<Font> (Window::*)() const>(&Window::get_theme_default_font)>("get_theme_default_font")
			.fun<static_cast<int32_t (Window::*)() const>(&Window::get_theme_default_font_size)>("get_theme_default_font_size")
			.fun<static_cast<void (Window::*)(Window::LayoutDirection)>(&Window::set_layout_direction)>("set_layout_direction")
			.fun<static_cast<Window::LayoutDirection (Window::*)() const>(&Window::get_layout_direction)>("get_layout_direction")
			.fun<static_cast<bool (Window::*)() const>(&Window::is_layout_rtl)>("is_layout_rtl")
			.fun<static_cast<void (Window::*)(const Rect2i &)>(&Window::popup)>("popup")
			.fun<static_cast<void (Window::*)(const Rect2i &)>(&Window::popup_on_parent)>("popup_on_parent")
			.fun<static_cast<void (Window::*)(const Vector2i &)>(&Window::popup_centered)>("popup_centered")
			.fun<static_cast<void (Window::*)(double)>(&Window::popup_centered_ratio)>("popup_centered_ratio")
			.fun<static_cast<void (Window::*)(const Vector2i &, double)>(&Window::popup_centered_clamped)>("popup_centered_clamped")
			.fun<static_cast<void (Window::*)(Node *, const Rect2i &)>(&Window::popup_exclusive)>("popup_exclusive")
			.fun<static_cast<void (Window::*)(Node *, const Rect2i &)>(&Window::popup_exclusive_on_parent)>("popup_exclusive_on_parent")
			.fun<static_cast<void (Window::*)(Node *, const Vector2i &)>(&Window::popup_exclusive_centered)>("popup_exclusive_centered")
			.fun<static_cast<void (Window::*)(Node *, double)>(&Window::popup_exclusive_centered_ratio)>("popup_exclusive_centered_ratio")
			.fun<static_cast<void (Window::*)(Node *, const Vector2i &, double)>(&Window::popup_exclusive_centered_clamped)>("popup_exclusive_centered_clamped");
}