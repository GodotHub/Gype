#include "register/register_classes.h"
#include "register/utils.h"

using namespace godot;

void register_classes_OS() {
    qjs::Context::Module &_module = _System;
    _module.class_<OS>("OS")
           .constructor<>()
           .property<OS::is_in_low_processor_usage_mode, OS::set_low_processor_usage_mode>("low_processor_usage_mode")
           .property<OS::get_low_processor_usage_mode_sleep_usec, OS::set_low_processor_usage_mode_sleep_usec>("low_processor_usage_mode_sleep_usec")
           .property<OS::is_delta_smoothing_enabled, OS::set_delta_smoothing>("delta_smoothing")
		   .fun<static_cast<PackedStringArray(OS::*)()>(&OS::get_connected_midi_inputs)>("get_connected_midi_inputs")
		   .fun<static_cast<void(OS::*)()>(&OS::open_midi_inputs)>("open_midi_inputs")
		   .fun<static_cast<void(OS::*)()>(&OS::close_midi_inputs)>("close_midi_inputs")
		   .fun<static_cast<void(OS::*)(const String &,const String &)>(&OS::alert)>("alert")
		   .fun<static_cast<void(OS::*)(const String &)>(&OS::crash)>("crash")
		   .fun<static_cast<int32_t(OS::*)()const>(&OS::get_processor_count)>("get_processor_count")
		   .fun<static_cast<String(OS::*)()const>(&OS::get_processor_name)>("get_processor_name")
		   .fun<static_cast<PackedStringArray(OS::*)()const>(&OS::get_system_fonts)>("get_system_fonts")
		   .fun<static_cast<String(OS::*)(const String &,int32_t,int32_t,bool)const>(&OS::get_system_font_path)>("get_system_font_path")
		   .fun<static_cast<PackedStringArray(OS::*)(const String &,const String &,const String &,const String &,int32_t,int32_t,bool)const>(&OS::get_system_font_path_for_text)>("get_system_font_path_for_text")
		   .fun<static_cast<String(OS::*)()const>(&OS::get_executable_path)>("get_executable_path")
		   .fun<static_cast<String(OS::*)()>(&OS::read_string_from_stdin)>("read_string_from_stdin")
		   .fun<static_cast<int32_t(OS::*)(const String &,const PackedStringArray &,const Array &,bool,bool)>(&OS::execute)>("execute")
		   .fun<static_cast<int32_t(OS::*)(const String &,const PackedStringArray &,bool)>(&OS::create_process)>("create_process")
		   .fun<static_cast<int32_t(OS::*)(const PackedStringArray &)>(&OS::create_instance)>("create_instance")
		   .fun<static_cast<Error(OS::*)(int32_t)>(&OS::kill)>("kill")
		   .fun<static_cast<Error(OS::*)(const String &)>(&OS::shell_open)>("shell_open")
		   .fun<static_cast<Error(OS::*)(const String &,bool)>(&OS::shell_show_in_file_manager)>("shell_show_in_file_manager")
		   .fun<static_cast<bool(OS::*)(int32_t)const>(&OS::is_process_running)>("is_process_running")
		   .fun<static_cast<int32_t(OS::*)()const>(&OS::get_process_id)>("get_process_id")
		   .fun<static_cast<bool(OS::*)(const String &)const>(&OS::has_environment)>("has_environment")
		   .fun<static_cast<String(OS::*)(const String &)const>(&OS::get_environment)>("get_environment")
		   .fun<static_cast<void(OS::*)(const String &,const String &)const>(&OS::set_environment)>("set_environment")
		   .fun<static_cast<void(OS::*)(const String &)const>(&OS::unset_environment)>("unset_environment")
		   .fun<static_cast<String(OS::*)()const>(&OS::get_name)>("get_name")
		   .fun<static_cast<String(OS::*)()const>(&OS::get_distribution_name)>("get_distribution_name")
		   .fun<static_cast<String(OS::*)()const>(&OS::get_version)>("get_version")
		   .fun<static_cast<PackedStringArray(OS::*)()>(&OS::get_cmdline_args)>("get_cmdline_args")
		   .fun<static_cast<PackedStringArray(OS::*)()>(&OS::get_cmdline_user_args)>("get_cmdline_user_args")
		   .fun<static_cast<PackedStringArray(OS::*)()const>(&OS::get_video_adapter_driver_info)>("get_video_adapter_driver_info")
		   .fun<static_cast<void(OS::*)(bool,const PackedStringArray &)>(&OS::set_restart_on_exit)>("set_restart_on_exit")
		   .fun<static_cast<bool(OS::*)()const>(&OS::is_restart_on_exit_set)>("is_restart_on_exit_set")
		   .fun<static_cast<PackedStringArray(OS::*)()const>(&OS::get_restart_on_exit_arguments)>("get_restart_on_exit_arguments")
		   .fun<static_cast<void(OS::*)(int32_t)const>(&OS::delay_usec)>("delay_usec")
		   .fun<static_cast<void(OS::*)(int32_t)const>(&OS::delay_msec)>("delay_msec")
		   .fun<static_cast<String(OS::*)()const>(&OS::get_locale)>("get_locale")
		   .fun<static_cast<String(OS::*)()const>(&OS::get_locale_language)>("get_locale_language")
		   .fun<static_cast<String(OS::*)()const>(&OS::get_model_name)>("get_model_name")
		   .fun<static_cast<bool(OS::*)()const>(&OS::is_userfs_persistent)>("is_userfs_persistent")
		   .fun<static_cast<bool(OS::*)()const>(&OS::is_stdout_verbose)>("is_stdout_verbose")
		   .fun<static_cast<bool(OS::*)()const>(&OS::is_debug_build)>("is_debug_build")
		   .fun<static_cast<uint64_t(OS::*)()const>(&OS::get_static_memory_usage)>("get_static_memory_usage")
		   .fun<static_cast<uint64_t(OS::*)()const>(&OS::get_static_memory_peak_usage)>("get_static_memory_peak_usage")
		   .fun<static_cast<Dictionary(OS::*)()const>(&OS::get_memory_info)>("get_memory_info")
		   .fun<static_cast<Error(OS::*)(const String &)const>(&OS::move_to_trash)>("move_to_trash")
		   .fun<static_cast<String(OS::*)()const>(&OS::get_user_data_dir)>("get_user_data_dir")
		   .fun<static_cast<String(OS::*)(OS::SystemDir,bool)const>(&OS::get_system_dir)>("get_system_dir")
		   .fun<static_cast<String(OS::*)()const>(&OS::get_config_dir)>("get_config_dir")
		   .fun<static_cast<String(OS::*)()const>(&OS::get_data_dir)>("get_data_dir")
		   .fun<static_cast<String(OS::*)()const>(&OS::get_cache_dir)>("get_cache_dir")
		   .fun<static_cast<String(OS::*)()const>(&OS::get_unique_id)>("get_unique_id")
		   .fun<static_cast<String(OS::*)(Key)const>(&OS::get_keycode_string)>("get_keycode_string")
		   .fun<static_cast<bool(OS::*)(int64_t)const>(&OS::is_keycode_unicode)>("is_keycode_unicode")
		   .fun<static_cast<Key(OS::*)(const String &)const>(&OS::find_keycode_from_string)>("find_keycode_from_string")
		   .fun<static_cast<void(OS::*)(bool)>(&OS::set_use_file_access_save_and_swap)>("set_use_file_access_save_and_swap")
		   .fun<static_cast<Error(OS::*)(const String &)>(&OS::set_thread_name)>("set_thread_name")
		   .fun<static_cast<uint64_t(OS::*)()const>(&OS::get_thread_caller_id)>("get_thread_caller_id")
		   .fun<static_cast<uint64_t(OS::*)()const>(&OS::get_main_thread_id)>("get_main_thread_id")
		   .fun<static_cast<bool(OS::*)(const String &)const>(&OS::has_feature)>("has_feature")
		   .fun<static_cast<bool(OS::*)()const>(&OS::is_sandboxed)>("is_sandboxed")
		   .fun<static_cast<bool(OS::*)(const String &)>(&OS::request_permission)>("request_permission")
		   .fun<static_cast<bool(OS::*)()>(&OS::request_permissions)>("request_permissions")
		   .fun<static_cast<PackedStringArray(OS::*)()const>(&OS::get_granted_permissions)>("get_granted_permissions")
		   .fun<static_cast<void(OS::*)()>(&OS::revoke_granted_permissions)>("revoke_granted_permissions")
;}