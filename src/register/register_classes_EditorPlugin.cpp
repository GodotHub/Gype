#include "register/register_classes.h"
#include "register/utils.h"

using namespace godot;

void register_classes_EditorPlugin() {
    qjs::Context::Module &_module = _Node;
    _module.class_<EditorPlugin>("EditorPlugin")
           .constructor<>()
		   .fun<static_cast<bool(EditorPlugin::*)(const Ref<InputEvent> &)>(&EditorPlugin::_forward_canvas_gui_input)>("_forward_canvas_gui_input")
		   .fun<static_cast<void(EditorPlugin::*)(Control *)>(&EditorPlugin::_forward_canvas_draw_over_viewport)>("_forward_canvas_draw_over_viewport")
		   .fun<static_cast<void(EditorPlugin::*)(Control *)>(&EditorPlugin::_forward_canvas_force_draw_over_viewport)>("_forward_canvas_force_draw_over_viewport")
		   .fun<static_cast<int32_t(EditorPlugin::*)(Camera3D *,const Ref<InputEvent> &)>(&EditorPlugin::_forward_3d_gui_input)>("_forward_3d_gui_input")
		   .fun<static_cast<void(EditorPlugin::*)(Control *)>(&EditorPlugin::_forward_3d_draw_over_viewport)>("_forward_3d_draw_over_viewport")
		   .fun<static_cast<void(EditorPlugin::*)(Control *)>(&EditorPlugin::_forward_3d_force_draw_over_viewport)>("_forward_3d_force_draw_over_viewport")
		   .fun<static_cast<String(EditorPlugin::*)()const>(&EditorPlugin::_get_plugin_name)>("_get_plugin_name")
		   .fun<static_cast<Ref<Texture2D>(EditorPlugin::*)()const>(&EditorPlugin::_get_plugin_icon)>("_get_plugin_icon")
		   .fun<static_cast<bool(EditorPlugin::*)()const>(&EditorPlugin::_has_main_screen)>("_has_main_screen")
		   .fun<static_cast<void(EditorPlugin::*)(bool)>(&EditorPlugin::_make_visible)>("_make_visible")
		   .fun<static_cast<void(EditorPlugin::*)(Object *)>(&EditorPlugin::_edit)>("_edit")
		   .fun<static_cast<bool(EditorPlugin::*)(Object *)const>(&EditorPlugin::_handles)>("_handles")
		   .fun<static_cast<Dictionary(EditorPlugin::*)()const>(&EditorPlugin::_get_state)>("_get_state")
		   .fun<static_cast<void(EditorPlugin::*)(const Dictionary &)>(&EditorPlugin::_set_state)>("_set_state")
		   .fun<static_cast<void(EditorPlugin::*)()>(&EditorPlugin::_clear)>("_clear")
		   .fun<static_cast<String(EditorPlugin::*)(const String &)const>(&EditorPlugin::_get_unsaved_status)>("_get_unsaved_status")
		   .fun<static_cast<void(EditorPlugin::*)()>(&EditorPlugin::_save_external_data)>("_save_external_data")
		   .fun<static_cast<void(EditorPlugin::*)()>(&EditorPlugin::_apply_changes)>("_apply_changes")
		   .fun<static_cast<PackedStringArray(EditorPlugin::*)()const>(&EditorPlugin::_get_breakpoints)>("_get_breakpoints")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<ConfigFile> &)>(&EditorPlugin::_set_window_layout)>("_set_window_layout")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<ConfigFile> &)>(&EditorPlugin::_get_window_layout)>("_get_window_layout")
		   .fun<static_cast<bool(EditorPlugin::*)()>(&EditorPlugin::_build)>("_build")
		   .fun<static_cast<void(EditorPlugin::*)()>(&EditorPlugin::_enable_plugin)>("_enable_plugin")
		   .fun<static_cast<void(EditorPlugin::*)()>(&EditorPlugin::_disable_plugin)>("_disable_plugin")
		   .fun<static_cast<void(EditorPlugin::*)(EditorPlugin::CustomControlContainer,Control *)>(&EditorPlugin::add_control_to_container)>("add_control_to_container")
		   .fun<static_cast<Button *(EditorPlugin::*)(Control *,const String &)>(&EditorPlugin::add_control_to_bottom_panel)>("add_control_to_bottom_panel")
		   .fun<static_cast<void(EditorPlugin::*)(EditorPlugin::DockSlot,Control *)>(&EditorPlugin::add_control_to_dock)>("add_control_to_dock")
		   .fun<static_cast<void(EditorPlugin::*)(Control *)>(&EditorPlugin::remove_control_from_docks)>("remove_control_from_docks")
		   .fun<static_cast<void(EditorPlugin::*)(Control *)>(&EditorPlugin::remove_control_from_bottom_panel)>("remove_control_from_bottom_panel")
		   .fun<static_cast<void(EditorPlugin::*)(EditorPlugin::CustomControlContainer,Control *)>(&EditorPlugin::remove_control_from_container)>("remove_control_from_container")
		   .fun<static_cast<void(EditorPlugin::*)(const String &,const Callable &)>(&EditorPlugin::add_tool_menu_item)>("add_tool_menu_item")
		   .fun<static_cast<void(EditorPlugin::*)(const String &,PopupMenu *)>(&EditorPlugin::add_tool_submenu_item)>("add_tool_submenu_item")
		   .fun<static_cast<void(EditorPlugin::*)(const String &)>(&EditorPlugin::remove_tool_menu_item)>("remove_tool_menu_item")
		   .fun<static_cast<PopupMenu *(EditorPlugin::*)()>(&EditorPlugin::get_export_as_menu)>("get_export_as_menu")
		   .fun<static_cast<void(EditorPlugin::*)(const String &,const String &,const Ref<Script> &,const Ref<Texture2D> &)>(&EditorPlugin::add_custom_type)>("add_custom_type")
		   .fun<static_cast<void(EditorPlugin::*)(const String &)>(&EditorPlugin::remove_custom_type)>("remove_custom_type")
		   .fun<static_cast<void(EditorPlugin::*)(const String &,const String &)>(&EditorPlugin::add_autoload_singleton)>("add_autoload_singleton")
		   .fun<static_cast<void(EditorPlugin::*)(const String &)>(&EditorPlugin::remove_autoload_singleton)>("remove_autoload_singleton")
		   .fun<static_cast<int32_t(EditorPlugin::*)()const>(&EditorPlugin::update_overlays)>("update_overlays")
		   .fun<static_cast<void(EditorPlugin::*)(Control *)>(&EditorPlugin::make_bottom_panel_item_visible)>("make_bottom_panel_item_visible")
		   .fun<static_cast<void(EditorPlugin::*)()>(&EditorPlugin::hide_bottom_panel)>("hide_bottom_panel")
		   .fun<static_cast<EditorUndoRedoManager *(EditorPlugin::*)()>(&EditorPlugin::get_undo_redo)>("get_undo_redo")
		   .fun<static_cast<void(EditorPlugin::*)(const Callable &)>(&EditorPlugin::add_undo_redo_inspector_hook_callback)>("add_undo_redo_inspector_hook_callback")
		   .fun<static_cast<void(EditorPlugin::*)(const Callable &)>(&EditorPlugin::remove_undo_redo_inspector_hook_callback)>("remove_undo_redo_inspector_hook_callback")
		   .fun<static_cast<void(EditorPlugin::*)()>(&EditorPlugin::queue_save_layout)>("queue_save_layout")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorTranslationParserPlugin> &)>(&EditorPlugin::add_translation_parser_plugin)>("add_translation_parser_plugin")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorTranslationParserPlugin> &)>(&EditorPlugin::remove_translation_parser_plugin)>("remove_translation_parser_plugin")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorImportPlugin> &,bool)>(&EditorPlugin::add_import_plugin)>("add_import_plugin")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorImportPlugin> &)>(&EditorPlugin::remove_import_plugin)>("remove_import_plugin")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorSceneFormatImporter> &,bool)>(&EditorPlugin::add_scene_format_importer_plugin)>("add_scene_format_importer_plugin")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorSceneFormatImporter> &)>(&EditorPlugin::remove_scene_format_importer_plugin)>("remove_scene_format_importer_plugin")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorScenePostImportPlugin> &,bool)>(&EditorPlugin::add_scene_post_import_plugin)>("add_scene_post_import_plugin")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorScenePostImportPlugin> &)>(&EditorPlugin::remove_scene_post_import_plugin)>("remove_scene_post_import_plugin")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorExportPlugin> &)>(&EditorPlugin::add_export_plugin)>("add_export_plugin")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorExportPlugin> &)>(&EditorPlugin::remove_export_plugin)>("remove_export_plugin")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorNode3DGizmoPlugin> &)>(&EditorPlugin::add_node_3d_gizmo_plugin)>("add_node_3d_gizmo_plugin")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorNode3DGizmoPlugin> &)>(&EditorPlugin::remove_node_3d_gizmo_plugin)>("remove_node_3d_gizmo_plugin")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorInspectorPlugin> &)>(&EditorPlugin::add_inspector_plugin)>("add_inspector_plugin")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorInspectorPlugin> &)>(&EditorPlugin::remove_inspector_plugin)>("remove_inspector_plugin")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorResourceConversionPlugin> &)>(&EditorPlugin::add_resource_conversion_plugin)>("add_resource_conversion_plugin")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorResourceConversionPlugin> &)>(&EditorPlugin::remove_resource_conversion_plugin)>("remove_resource_conversion_plugin")
		   .fun<static_cast<void(EditorPlugin::*)()>(&EditorPlugin::set_input_event_forwarding_always_enabled)>("set_input_event_forwarding_always_enabled")
		   .fun<static_cast<void(EditorPlugin::*)()>(&EditorPlugin::set_force_draw_over_forwarding_enabled)>("set_force_draw_over_forwarding_enabled")
		   .fun<static_cast<EditorInterface *(EditorPlugin::*)()>(&EditorPlugin::get_editor_interface)>("get_editor_interface")
		   .fun<static_cast<ScriptCreateDialog *(EditorPlugin::*)()>(&EditorPlugin::get_script_create_dialog)>("get_script_create_dialog")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorDebuggerPlugin> &)>(&EditorPlugin::add_debugger_plugin)>("add_debugger_plugin")
		   .fun<static_cast<void(EditorPlugin::*)(const Ref<EditorDebuggerPlugin> &)>(&EditorPlugin::remove_debugger_plugin)>("remove_debugger_plugin")
		   .fun<static_cast<String(EditorPlugin::*)()const>(&EditorPlugin::get_plugin_version)>("get_plugin_version")
;}