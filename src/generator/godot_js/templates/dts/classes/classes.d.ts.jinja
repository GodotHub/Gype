{%- macro extends(class) -%}
{%- if class['inherits'] -%}
 extends {{class['inherits']}}
{%- endif -%}
{%- endmacro -%}

{%- for den in dependency %}
{%- if den != class['name']%}
import { {{den}} } from "@godot/classes/{{camel_to_snake(den)}}";
{%- endif %}
{%- endfor %}

export declare class {{class['name']}} {{extends(class)}}{
  {%- for method in class['methods'] %}
  public {{method['name']}}({{connect_args(method['arguments'])}}){{set_return(method['return_value']['type'] if method['return_value'] else None)}};
  {%- endfor %}
  {%- for prop in class['properties'] %}
  {%- if prop['getter'] %}
  public get {{prop['name']}}(){{set_return(prop['type'])}} {
    {{prop['getter']}}();
  }
  {%- endif %}
  {%- if prop['setter'] %}
  public set {{prop['name']}}(value): void {
    {{prop['setter']}}(value);
  }
  {%- endif %}
  {%- endfor %}
  {%- for enum in class['enums'] %}
  static {{enum['name']}} = {
    {%- for value in enum['values'] %}
    {{value['name']}} = {{value['value']}},
    {%- endfor %}
  }
  {%- endfor %}
}