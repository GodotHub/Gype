
import { Control } from "@godot/classes/control";
import { Node } from "@godot/classes/node";
export declare class Range extends Control{
  public _value_changed(_new_value: number): void;
  public get_value(): number;
  public get_min(): number;
  public get_max(): number;
  public get_step(): number;
  public get_page(): number;
  public get_as_ratio(): number;
  public set_value(_value: number): void;
  public set_value_no_signal(_value: number): void;
  public set_min(_minimum: number): void;
  public set_max(_maximum: number): void;
  public set_step(_step: number): void;
  public set_page(_pagesize: number): void;
  public set_as_ratio(_value: number): void;
  public set_use_rounded_values(_enabled: boolean): void;
  public is_using_rounded_values(): boolean;
  public set_exp_ratio(_enabled: boolean): void;
  public is_ratio_exp(): boolean;
  public set_allow_greater(_allow: boolean): void;
  public is_greater_allowed(): boolean;
  public set_allow_lesser(_allow: boolean): void;
  public is_lesser_allowed(): boolean;
  public share(_with: Node): void;
  public unshare(): void;
  public get min_value(): number;
  public set min_value(value): void;
  public get max_value(): number;
  public set max_value(value): void;
  public get step(): number;
  public set step(value): void;
  public get page(): number;
  public set page(value): void;
  public get value(): number;
  public set value(value): void;
  public get ratio(): number;
  public set ratio(value): void;
  public get exp_edit(): boolean;
  public set exp_edit(value): void;
  public get rounded(): boolean;
  public set rounded(value): void;
  public get allow_greater(): boolean;
  public set allow_greater(value): void;
  public get allow_lesser(): boolean;
  public set allow_lesser(value): void;
  public get value_changed(): Signal;
  public get changed(): Signal;
}