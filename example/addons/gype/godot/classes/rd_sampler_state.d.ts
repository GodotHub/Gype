
import { RefCounted } from "@godot/classes/ref_counted";


export declare class RDSamplerState extends RefCounted{
  public set_mag_filter(_p_member: number): void;
  public get_mag_filter(): number;
  public set_min_filter(_p_member: number): void;
  public get_min_filter(): number;
  public set_mip_filter(_p_member: number): void;
  public get_mip_filter(): number;
  public set_repeat_u(_p_member: number): void;
  public get_repeat_u(): number;
  public set_repeat_v(_p_member: number): void;
  public get_repeat_v(): number;
  public set_repeat_w(_p_member: number): void;
  public get_repeat_w(): number;
  public set_lod_bias(_p_member: number): void;
  public get_lod_bias(): number;
  public set_use_anisotropy(_p_member: boolean): void;
  public get_use_anisotropy(): boolean;
  public set_anisotropy_max(_p_member: number): void;
  public get_anisotropy_max(): number;
  public set_enable_compare(_p_member: boolean): void;
  public get_enable_compare(): boolean;
  public set_compare_op(_p_member: number): void;
  public get_compare_op(): number;
  public set_min_lod(_p_member: number): void;
  public get_min_lod(): number;
  public set_max_lod(_p_member: number): void;
  public get_max_lod(): number;
  public set_border_color(_p_member: number): void;
  public get_border_color(): number;
  public set_unnormalized_uvw(_p_member: boolean): void;
  public get_unnormalized_uvw(): boolean;
  public get mag_filter(): number;
  public set mag_filter(value): void;
  public get min_filter(): number;
  public set min_filter(value): void;
  public get mip_filter(): number;
  public set mip_filter(value): void;
  public get repeat_u(): number;
  public set repeat_u(value): void;
  public get repeat_v(): number;
  public set repeat_v(value): void;
  public get repeat_w(): number;
  public set repeat_w(value): void;
  public get lod_bias(): number;
  public set lod_bias(value): void;
  public get use_anisotropy(): boolean;
  public set use_anisotropy(value): void;
  public get anisotropy_max(): number;
  public set anisotropy_max(value): void;
  public get enable_compare(): boolean;
  public set enable_compare(value): void;
  public get compare_op(): number;
  public set compare_op(value): void;
  public get min_lod(): number;
  public set min_lod(value): void;
  public get max_lod(): number;
  public set max_lod(value): void;
  public get border_color(): number;
  public set border_color(value): void;
  public get unnormalized_uvw(): boolean;
  public set unnormalized_uvw(value): void;
}